// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgUtil.h"
#include "wrap_referenced.h"
#include "RenderBin.pypp.hpp"

namespace bp = boost::python;

struct RenderBin_wrapper : osgUtil::RenderBin, bp::wrapper< osgUtil::RenderBin > {

    struct DrawCallback_wrapper : osgUtil::RenderBin::DrawCallback, bp::wrapper< osgUtil::RenderBin::DrawCallback > {
    
        DrawCallback_wrapper()
        : osgUtil::RenderBin::DrawCallback()
          , bp::wrapper< osgUtil::RenderBin::DrawCallback >(){
            // null constructor
            
        }
    
        virtual void drawImplementation( ::osgUtil::RenderBin * bin, ::osg::RenderInfo & renderInfo, ::osgUtil::RenderLeaf * & previous ){
            bp::override func_drawImplementation = this->get_override( "drawImplementation" );
            func_drawImplementation( boost::python::ptr(bin), boost::ref(renderInfo), boost::ref(previous) );
        }
    
        virtual void setThreadSafeRefUnref( bool threadSafe ) {
            if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
                func_setThreadSafeRefUnref( threadSafe );
            else{
                this->osg::Referenced::setThreadSafeRefUnref( threadSafe );
            }
        }
        
        void default_setThreadSafeRefUnref( bool threadSafe ) {
            osg::Referenced::setThreadSafeRefUnref( threadSafe );
        }
    
    };

    struct SortCallback_wrapper : osgUtil::RenderBin::SortCallback, bp::wrapper< osgUtil::RenderBin::SortCallback > {
    
        SortCallback_wrapper()
        : osgUtil::RenderBin::SortCallback()
          , bp::wrapper< osgUtil::RenderBin::SortCallback >(){
            // null constructor
            
        }
    
        virtual void sortImplementation( ::osgUtil::RenderBin * arg0 ){
            bp::override func_sortImplementation = this->get_override( "sortImplementation" );
            func_sortImplementation( boost::python::ptr(arg0) );
        }
    
        virtual void setThreadSafeRefUnref( bool threadSafe ) {
            if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
                func_setThreadSafeRefUnref( threadSafe );
            else{
                this->osg::Referenced::setThreadSafeRefUnref( threadSafe );
            }
        }
        
        void default_setThreadSafeRefUnref( bool threadSafe ) {
            osg::Referenced::setThreadSafeRefUnref( threadSafe );
        }
    
    };

    RenderBin_wrapper( )
    : osgUtil::RenderBin( )
      , bp::wrapper< osgUtil::RenderBin >(){
        // null constructor
    
    }

    RenderBin_wrapper(::osgUtil::RenderBin::SortMode mode )
    : osgUtil::RenderBin( mode )
      , bp::wrapper< osgUtil::RenderBin >(){
        // constructor
    
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osgUtil::RenderBin::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osgUtil::RenderBin::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osgUtil::RenderBin::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osgUtil::RenderBin::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osgUtil::RenderBin::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osgUtil::RenderBin::cloneType( );
    }

    virtual unsigned int computeNumberOfDynamicRenderLeaves(  ) const  {
        if( bp::override func_computeNumberOfDynamicRenderLeaves = this->get_override( "computeNumberOfDynamicRenderLeaves" ) )
            return func_computeNumberOfDynamicRenderLeaves(  );
        else{
            return this->osgUtil::RenderBin::computeNumberOfDynamicRenderLeaves(  );
        }
    }
    
    unsigned int default_computeNumberOfDynamicRenderLeaves(  ) const  {
        return osgUtil::RenderBin::computeNumberOfDynamicRenderLeaves( );
    }

    virtual void draw( ::osg::RenderInfo & renderInfo, ::osgUtil::RenderLeaf * & previous ) {
        if( bp::override func_draw = this->get_override( "draw" ) )
            func_draw( boost::ref(renderInfo), boost::ref(previous) );
        else{
            this->osgUtil::RenderBin::draw( boost::ref(renderInfo), boost::ref(previous) );
        }
    }
    
    void default_draw( ::osg::RenderInfo & renderInfo, ::osgUtil::RenderLeaf * & previous ) {
        osgUtil::RenderBin::draw( boost::ref(renderInfo), boost::ref(previous) );
    }

    virtual void drawImplementation( ::osg::RenderInfo & renderInfo, ::osgUtil::RenderLeaf * & previous ) {
        if( bp::override func_drawImplementation = this->get_override( "drawImplementation" ) )
            func_drawImplementation( boost::ref(renderInfo), boost::ref(previous) );
        else{
            this->osgUtil::RenderBin::drawImplementation( boost::ref(renderInfo), boost::ref(previous) );
        }
    }
    
    void default_drawImplementation( ::osg::RenderInfo & renderInfo, ::osgUtil::RenderLeaf * & previous ) {
        osgUtil::RenderBin::drawImplementation( boost::ref(renderInfo), boost::ref(previous) );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osgUtil::RenderBin::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osgUtil::RenderBin::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osgUtil::RenderBin::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osgUtil::RenderBin::libraryName( );
    }

    virtual void releaseGLObjects( ::osg::State * state=0 ) const  {
        if( bp::override func_releaseGLObjects = this->get_override( "releaseGLObjects" ) )
            func_releaseGLObjects( boost::python::ptr(state) );
        else{
            this->osgUtil::RenderBin::releaseGLObjects( boost::python::ptr(state) );
        }
    }
    
    void default_releaseGLObjects( ::osg::State * state=0 ) const  {
        osgUtil::RenderBin::releaseGLObjects( boost::python::ptr(state) );
    }

    virtual void reset(  ) {
        if( bp::override func_reset = this->get_override( "reset" ) )
            func_reset(  );
        else{
            this->osgUtil::RenderBin::reset(  );
        }
    }
    
    void default_reset(  ) {
        osgUtil::RenderBin::reset( );
    }

    virtual void sort(  ) {
        if( bp::override func_sort = this->get_override( "sort" ) )
            func_sort(  );
        else{
            this->osgUtil::RenderBin::sort(  );
        }
    }
    
    void default_sort(  ) {
        osgUtil::RenderBin::sort( );
    }

    virtual void sortBackToFront(  ) {
        if( bp::override func_sortBackToFront = this->get_override( "sortBackToFront" ) )
            func_sortBackToFront(  );
        else{
            this->osgUtil::RenderBin::sortBackToFront(  );
        }
    }
    
    void default_sortBackToFront(  ) {
        osgUtil::RenderBin::sortBackToFront( );
    }

    virtual void sortByState(  ) {
        if( bp::override func_sortByState = this->get_override( "sortByState" ) )
            func_sortByState(  );
        else{
            this->osgUtil::RenderBin::sortByState(  );
        }
    }
    
    void default_sortByState(  ) {
        osgUtil::RenderBin::sortByState( );
    }

    virtual void sortByStateThenFrontToBack(  ) {
        if( bp::override func_sortByStateThenFrontToBack = this->get_override( "sortByStateThenFrontToBack" ) )
            func_sortByStateThenFrontToBack(  );
        else{
            this->osgUtil::RenderBin::sortByStateThenFrontToBack(  );
        }
    }
    
    void default_sortByStateThenFrontToBack(  ) {
        osgUtil::RenderBin::sortByStateThenFrontToBack( );
    }

    virtual void sortFrontToBack(  ) {
        if( bp::override func_sortFrontToBack = this->get_override( "sortFrontToBack" ) )
            func_sortFrontToBack(  );
        else{
            this->osgUtil::RenderBin::sortFrontToBack(  );
        }
    }
    
    void default_sortFrontToBack(  ) {
        osgUtil::RenderBin::sortFrontToBack( );
    }

    virtual void sortImplementation(  ) {
        if( bp::override func_sortImplementation = this->get_override( "sortImplementation" ) )
            func_sortImplementation(  );
        else{
            this->osgUtil::RenderBin::sortImplementation(  );
        }
    }
    
    void default_sortImplementation(  ) {
        osgUtil::RenderBin::sortImplementation( );
    }

    virtual void sortTraversalOrder(  ) {
        if( bp::override func_sortTraversalOrder = this->get_override( "sortTraversalOrder" ) )
            func_sortTraversalOrder(  );
        else{
            this->osgUtil::RenderBin::sortTraversalOrder(  );
        }
    }
    
    void default_sortTraversalOrder(  ) {
        osgUtil::RenderBin::sortTraversalOrder( );
    }

    virtual void computeDataVariance(  ) {
        if( bp::override func_computeDataVariance = this->get_override( "computeDataVariance" ) )
            func_computeDataVariance(  );
        else{
            this->osg::Object::computeDataVariance(  );
        }
    }
    
    void default_computeDataVariance(  ) {
        osg::Object::computeDataVariance( );
    }

    virtual ::osg::Referenced * getUserData(  ) {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::Object::getUserData(  );
        }
    }
    
    ::osg::Referenced * default_getUserData(  ) {
        return osg::Object::getUserData( );
    }

    virtual ::osg::Referenced const * getUserData(  ) const  {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::Object::getUserData(  );
        }
    }
    
    ::osg::Referenced const * default_getUserData(  ) const  {
        return osg::Object::getUserData( );
    }

    virtual void resizeGLObjectBuffers( unsigned int arg0 ) {
        if( bp::override func_resizeGLObjectBuffers = this->get_override( "resizeGLObjectBuffers" ) )
            func_resizeGLObjectBuffers( arg0 );
        else{
            this->osg::Object::resizeGLObjectBuffers( arg0 );
        }
    }
    
    void default_resizeGLObjectBuffers( unsigned int arg0 ) {
        osg::Object::resizeGLObjectBuffers( arg0 );
    }

    virtual void setName( ::std::string const & name ) {
        if( bp::override func_setName = this->get_override( "setName" ) )
            func_setName( name );
        else{
            this->osg::Object::setName( name );
        }
    }
    
    void default_setName( ::std::string const & name ) {
        osg::Object::setName( name );
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Object::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Object::setThreadSafeRefUnref( threadSafe );
    }

    virtual void setUserData( ::osg::Referenced * obj ) {
        if( bp::override func_setUserData = this->get_override( "setUserData" ) )
            func_setUserData( boost::python::ptr(obj) );
        else{
            this->osg::Object::setUserData( boost::python::ptr(obj) );
        }
    }
    
    void default_setUserData( ::osg::Referenced * obj ) {
        osg::Object::setUserData( boost::python::ptr(obj) );
    }

};

void register_RenderBin_class(){

    { //::osgUtil::RenderBin
        typedef bp::class_< RenderBin_wrapper, bp::bases< ::osg::Object >, osg::ref_ptr< RenderBin_wrapper >, boost::noncopyable > RenderBin_exposer_t;
        RenderBin_exposer_t RenderBin_exposer = RenderBin_exposer_t( "RenderBin", bp::no_init );
        bp::scope RenderBin_scope( RenderBin_exposer );
        bp::enum_< osgUtil::RenderBin::SortMode>("SortMode")
            .value("SORT_BY_STATE", osgUtil::RenderBin::SORT_BY_STATE)
            .value("SORT_BY_STATE_THEN_FRONT_TO_BACK", osgUtil::RenderBin::SORT_BY_STATE_THEN_FRONT_TO_BACK)
            .value("SORT_FRONT_TO_BACK", osgUtil::RenderBin::SORT_FRONT_TO_BACK)
            .value("SORT_BACK_TO_FRONT", osgUtil::RenderBin::SORT_BACK_TO_FRONT)
            .value("TRAVERSAL_ORDER", osgUtil::RenderBin::TRAVERSAL_ORDER)
            .export_values()
            ;
        bp::class_< RenderBin_wrapper::DrawCallback_wrapper, bp::bases< ::osg::Referenced >, osg::ref_ptr< RenderBin_wrapper::DrawCallback_wrapper >, boost::noncopyable >( "DrawCallback", bp::no_init )    
            .def( 
                "drawImplementation"
                , bp::pure_virtual( (void ( ::osgUtil::RenderBin::DrawCallback::* )( ::osgUtil::RenderBin *,::osg::RenderInfo &,::osgUtil::RenderLeaf * & ) )(&::osgUtil::RenderBin::DrawCallback::drawImplementation) )
                , ( bp::arg("bin"), bp::arg("renderInfo"), bp::arg("previous") ) );
        bp::class_< RenderBin_wrapper::SortCallback_wrapper, bp::bases< ::osg::Referenced >, osg::ref_ptr< RenderBin_wrapper::SortCallback_wrapper >, boost::noncopyable >( "SortCallback", bp::no_init )    
            .def( 
                "sortImplementation"
                , bp::pure_virtual( (void ( ::osgUtil::RenderBin::SortCallback::* )( ::osgUtil::RenderBin * ) )(&::osgUtil::RenderBin::SortCallback::sortImplementation) )
                , ( bp::arg("arg0") ) );
        RenderBin_exposer.def( bp::init< >() );
        RenderBin_exposer.def( bp::init< osgUtil::RenderBin::SortMode >(( bp::arg("mode") )) );
        bp::implicitly_convertible< osgUtil::RenderBin::SortMode, osgUtil::RenderBin >();
        { //::osgUtil::RenderBin::addRenderBinPrototype
        
            typedef void ( *addRenderBinPrototype_function_type )( ::std::string const &,::osgUtil::RenderBin * );
            
            RenderBin_exposer.def( 
                "addRenderBinPrototype"
                , addRenderBinPrototype_function_type( &::osgUtil::RenderBin::addRenderBinPrototype )
                , ( bp::arg("binName"), bp::arg("proto") ) );
        
        }
        { //::osgUtil::RenderBin::addStateGraph
        
            typedef void ( ::osgUtil::RenderBin::*addStateGraph_function_type )( ::osgUtil::StateGraph * ) ;
            
            RenderBin_exposer.def( 
                "addStateGraph"
                , addStateGraph_function_type( &::osgUtil::RenderBin::addStateGraph )
                , ( bp::arg("rg") ) );
        
        }
        { //::osgUtil::RenderBin::className
        
            typedef char const * ( ::osgUtil::RenderBin::*className_function_type )(  ) const;
            typedef char const * ( RenderBin_wrapper::*default_className_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "className"
                , className_function_type(&::osgUtil::RenderBin::className)
                , default_className_function_type(&RenderBin_wrapper::default_className) );
        
        }
        { //::osgUtil::RenderBin::clone
        
            typedef ::osg::Object * ( ::osgUtil::RenderBin::*clone_function_type )( ::osg::CopyOp const & ) const;
            typedef ::osg::Object * ( RenderBin_wrapper::*default_clone_function_type )( ::osg::CopyOp const & ) const;
            
            RenderBin_exposer.def( 
                "clone"
                , clone_function_type(&::osgUtil::RenderBin::clone)
                , default_clone_function_type(&RenderBin_wrapper::default_clone)
                , ( bp::arg("copyop") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::osgUtil::RenderBin::cloneType
        
            typedef ::osg::Object * ( ::osgUtil::RenderBin::*cloneType_function_type )(  ) const;
            typedef ::osg::Object * ( RenderBin_wrapper::*default_cloneType_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "cloneType"
                , cloneType_function_type(&::osgUtil::RenderBin::cloneType)
                , default_cloneType_function_type(&RenderBin_wrapper::default_cloneType)
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::osgUtil::RenderBin::computeNumberOfDynamicRenderLeaves
        
            typedef unsigned int ( ::osgUtil::RenderBin::*computeNumberOfDynamicRenderLeaves_function_type )(  ) const;
            typedef unsigned int ( RenderBin_wrapper::*default_computeNumberOfDynamicRenderLeaves_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "computeNumberOfDynamicRenderLeaves"
                , computeNumberOfDynamicRenderLeaves_function_type(&::osgUtil::RenderBin::computeNumberOfDynamicRenderLeaves)
                , default_computeNumberOfDynamicRenderLeaves_function_type(&RenderBin_wrapper::default_computeNumberOfDynamicRenderLeaves) );
        
        }
        { //::osgUtil::RenderBin::copyLeavesFromStateGraphListToRenderLeafList
        
            typedef void ( ::osgUtil::RenderBin::*copyLeavesFromStateGraphListToRenderLeafList_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "copyLeavesFromStateGraphListToRenderLeafList"
                , copyLeavesFromStateGraphListToRenderLeafList_function_type( &::osgUtil::RenderBin::copyLeavesFromStateGraphListToRenderLeafList ) );
        
        }
        { //::osgUtil::RenderBin::createRenderBin
        
            typedef ::osgUtil::RenderBin * ( *createRenderBin_function_type )( ::std::string const & );
            
            RenderBin_exposer.def( 
                "createRenderBin"
                , createRenderBin_function_type( &::osgUtil::RenderBin::createRenderBin )
                , ( bp::arg("binName") )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::draw
        
            typedef void ( ::osgUtil::RenderBin::*draw_function_type )( ::osg::RenderInfo &,::osgUtil::RenderLeaf * & ) ;
            typedef void ( RenderBin_wrapper::*default_draw_function_type )( ::osg::RenderInfo &,::osgUtil::RenderLeaf * & ) ;
            
            RenderBin_exposer.def( 
                "draw"
                , draw_function_type(&::osgUtil::RenderBin::draw)
                , default_draw_function_type(&RenderBin_wrapper::default_draw)
                , ( bp::arg("renderInfo"), bp::arg("previous") ) );
        
        }
        { //::osgUtil::RenderBin::drawImplementation
        
            typedef void ( ::osgUtil::RenderBin::*drawImplementation_function_type )( ::osg::RenderInfo &,::osgUtil::RenderLeaf * & ) ;
            typedef void ( RenderBin_wrapper::*default_drawImplementation_function_type )( ::osg::RenderInfo &,::osgUtil::RenderLeaf * & ) ;
            
            RenderBin_exposer.def( 
                "drawImplementation"
                , drawImplementation_function_type(&::osgUtil::RenderBin::drawImplementation)
                , default_drawImplementation_function_type(&RenderBin_wrapper::default_drawImplementation)
                , ( bp::arg("renderInfo"), bp::arg("previous") ) );
        
        }
        { //::osgUtil::RenderBin::find_or_insert
        
            typedef ::osgUtil::RenderBin * ( ::osgUtil::RenderBin::*find_or_insert_function_type )( int,::std::string const & ) ;
            
            RenderBin_exposer.def( 
                "find_or_insert"
                , find_or_insert_function_type( &::osgUtil::RenderBin::find_or_insert )
                , ( bp::arg("binNum"), bp::arg("binName") )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getBinNum
        
            typedef int ( ::osgUtil::RenderBin::*getBinNum_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getBinNum"
                , getBinNum_function_type( &::osgUtil::RenderBin::getBinNum ) );
        
        }
        { //::osgUtil::RenderBin::getDefaultRenderBinSortMode
        
            typedef ::osgUtil::RenderBin::SortMode ( *getDefaultRenderBinSortMode_function_type )(  );
            
            RenderBin_exposer.def( 
                "getDefaultRenderBinSortMode"
                , getDefaultRenderBinSortMode_function_type( &::osgUtil::RenderBin::getDefaultRenderBinSortMode ) );
        
        }
        { //::osgUtil::RenderBin::getDrawCallback
        
            typedef ::osgUtil::RenderBin::DrawCallback * ( ::osgUtil::RenderBin::*getDrawCallback_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getDrawCallback"
                , getDrawCallback_function_type( &::osgUtil::RenderBin::getDrawCallback )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getDrawCallback
        
            typedef ::osgUtil::RenderBin::DrawCallback const * ( ::osgUtil::RenderBin::*getDrawCallback_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getDrawCallback"
                , getDrawCallback_function_type( &::osgUtil::RenderBin::getDrawCallback )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getParent
        
            typedef ::osgUtil::RenderBin * ( ::osgUtil::RenderBin::*getParent_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getParent"
                , getParent_function_type( &::osgUtil::RenderBin::getParent )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getParent
        
            typedef ::osgUtil::RenderBin const * ( ::osgUtil::RenderBin::*getParent_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getParent"
                , getParent_function_type( &::osgUtil::RenderBin::getParent )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getRenderBinList
        
            typedef ::std::map< int, osg::ref_ptr<osgUtil::RenderBin> > & ( ::osgUtil::RenderBin::*getRenderBinList_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getRenderBinList"
                , getRenderBinList_function_type( &::osgUtil::RenderBin::getRenderBinList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getRenderBinList
        
            typedef ::std::map< int, osg::ref_ptr<osgUtil::RenderBin> > const & ( ::osgUtil::RenderBin::*getRenderBinList_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getRenderBinList"
                , getRenderBinList_function_type( &::osgUtil::RenderBin::getRenderBinList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getRenderBinPrototype
        
            typedef ::osgUtil::RenderBin * ( *getRenderBinPrototype_function_type )( ::std::string const & );
            
            RenderBin_exposer.def( 
                "getRenderBinPrototype"
                , getRenderBinPrototype_function_type( &::osgUtil::RenderBin::getRenderBinPrototype )
                , ( bp::arg("binName") )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getRenderLeafList
        
            typedef ::std::vector< osgUtil::RenderLeaf* > & ( ::osgUtil::RenderBin::*getRenderLeafList_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getRenderLeafList"
                , getRenderLeafList_function_type( &::osgUtil::RenderBin::getRenderLeafList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getRenderLeafList
        
            typedef ::std::vector< osgUtil::RenderLeaf* > const & ( ::osgUtil::RenderBin::*getRenderLeafList_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getRenderLeafList"
                , getRenderLeafList_function_type( &::osgUtil::RenderBin::getRenderLeafList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getSortCallback
        
            typedef ::osgUtil::RenderBin::SortCallback * ( ::osgUtil::RenderBin::*getSortCallback_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getSortCallback"
                , getSortCallback_function_type( &::osgUtil::RenderBin::getSortCallback )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getSortCallback
        
            typedef ::osgUtil::RenderBin::SortCallback const * ( ::osgUtil::RenderBin::*getSortCallback_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getSortCallback"
                , getSortCallback_function_type( &::osgUtil::RenderBin::getSortCallback )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getSortMode
        
            typedef ::osgUtil::RenderBin::SortMode ( ::osgUtil::RenderBin::*getSortMode_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getSortMode"
                , getSortMode_function_type( &::osgUtil::RenderBin::getSortMode ) );
        
        }
        { //::osgUtil::RenderBin::getStage
        
            typedef ::osgUtil::RenderStage * ( ::osgUtil::RenderBin::*getStage_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getStage"
                , getStage_function_type( &::osgUtil::RenderBin::getStage )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getStage
        
            typedef ::osgUtil::RenderStage const * ( ::osgUtil::RenderBin::*getStage_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getStage"
                , getStage_function_type( &::osgUtil::RenderBin::getStage )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getStateGraphList
        
            typedef ::std::vector< osgUtil::StateGraph* > & ( ::osgUtil::RenderBin::*getStateGraphList_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getStateGraphList"
                , getStateGraphList_function_type( &::osgUtil::RenderBin::getStateGraphList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getStateGraphList
        
            typedef ::std::vector< osgUtil::StateGraph* > const & ( ::osgUtil::RenderBin::*getStateGraphList_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getStateGraphList"
                , getStateGraphList_function_type( &::osgUtil::RenderBin::getStateGraphList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getStateSet
        
            typedef ::osg::StateSet * ( ::osgUtil::RenderBin::*getStateSet_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "getStateSet"
                , getStateSet_function_type( &::osgUtil::RenderBin::getStateSet )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getStateSet
        
            typedef ::osg::StateSet const * ( ::osgUtil::RenderBin::*getStateSet_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "getStateSet"
                , getStateSet_function_type( &::osgUtil::RenderBin::getStateSet )
                , bp::return_internal_reference< >() );
        
        }
        { //::osgUtil::RenderBin::getStats
        
            typedef bool ( ::osgUtil::RenderBin::*getStats_function_type )( ::osgUtil::Statistics & ) const;
            
            RenderBin_exposer.def( 
                "getStats"
                , getStats_function_type( &::osgUtil::RenderBin::getStats )
                , ( bp::arg("primStats") ) );
        
        }
        { //::osgUtil::RenderBin::isSameKindAs
        
            typedef bool ( ::osgUtil::RenderBin::*isSameKindAs_function_type )( ::osg::Object const * ) const;
            typedef bool ( RenderBin_wrapper::*default_isSameKindAs_function_type )( ::osg::Object const * ) const;
            
            RenderBin_exposer.def( 
                "isSameKindAs"
                , isSameKindAs_function_type(&::osgUtil::RenderBin::isSameKindAs)
                , default_isSameKindAs_function_type(&RenderBin_wrapper::default_isSameKindAs)
                , ( bp::arg("obj") ) );
        
        }
        { //::osgUtil::RenderBin::libraryName
        
            typedef char const * ( ::osgUtil::RenderBin::*libraryName_function_type )(  ) const;
            typedef char const * ( RenderBin_wrapper::*default_libraryName_function_type )(  ) const;
            
            RenderBin_exposer.def( 
                "libraryName"
                , libraryName_function_type(&::osgUtil::RenderBin::libraryName)
                , default_libraryName_function_type(&RenderBin_wrapper::default_libraryName) );
        
        }
        { //::osgUtil::RenderBin::releaseGLObjects
        
            typedef void ( ::osgUtil::RenderBin::*releaseGLObjects_function_type )( ::osg::State * ) const;
            typedef void ( RenderBin_wrapper::*default_releaseGLObjects_function_type )( ::osg::State * ) const;
            
            RenderBin_exposer.def( 
                "releaseGLObjects"
                , releaseGLObjects_function_type(&::osgUtil::RenderBin::releaseGLObjects)
                , default_releaseGLObjects_function_type(&RenderBin_wrapper::default_releaseGLObjects)
                , ( bp::arg("state")=bp::object() ) );
        
        }
        { //::osgUtil::RenderBin::removeRenderBinPrototype
        
            typedef void ( *removeRenderBinPrototype_function_type )( ::osgUtil::RenderBin * );
            
            RenderBin_exposer.def( 
                "removeRenderBinPrototype"
                , removeRenderBinPrototype_function_type( &::osgUtil::RenderBin::removeRenderBinPrototype )
                , ( bp::arg("proto") ) );
        
        }
        { //::osgUtil::RenderBin::reset
        
            typedef void ( ::osgUtil::RenderBin::*reset_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_reset_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "reset"
                , reset_function_type(&::osgUtil::RenderBin::reset)
                , default_reset_function_type(&RenderBin_wrapper::default_reset) );
        
        }
        { //::osgUtil::RenderBin::setDefaultRenderBinSortMode
        
            typedef void ( *setDefaultRenderBinSortMode_function_type )( ::osgUtil::RenderBin::SortMode );
            
            RenderBin_exposer.def( 
                "setDefaultRenderBinSortMode"
                , setDefaultRenderBinSortMode_function_type( &::osgUtil::RenderBin::setDefaultRenderBinSortMode )
                , ( bp::arg("mode") ) );
        
        }
        { //::osgUtil::RenderBin::setDrawCallback
        
            typedef void ( ::osgUtil::RenderBin::*setDrawCallback_function_type )( ::osgUtil::RenderBin::DrawCallback * ) ;
            
            RenderBin_exposer.def( 
                "setDrawCallback"
                , setDrawCallback_function_type( &::osgUtil::RenderBin::setDrawCallback )
                , ( bp::arg("drawCallback") ) );
        
        }
        { //::osgUtil::RenderBin::setSortCallback
        
            typedef void ( ::osgUtil::RenderBin::*setSortCallback_function_type )( ::osgUtil::RenderBin::SortCallback * ) ;
            
            RenderBin_exposer.def( 
                "setSortCallback"
                , setSortCallback_function_type( &::osgUtil::RenderBin::setSortCallback )
                , ( bp::arg("sortCallback") ) );
        
        }
        { //::osgUtil::RenderBin::setSortMode
        
            typedef void ( ::osgUtil::RenderBin::*setSortMode_function_type )( ::osgUtil::RenderBin::SortMode ) ;
            
            RenderBin_exposer.def( 
                "setSortMode"
                , setSortMode_function_type( &::osgUtil::RenderBin::setSortMode )
                , ( bp::arg("mode") ) );
        
        }
        { //::osgUtil::RenderBin::setStateSet
        
            typedef void ( ::osgUtil::RenderBin::*setStateSet_function_type )( ::osg::StateSet * ) ;
            
            RenderBin_exposer.def( 
                "setStateSet"
                , setStateSet_function_type( &::osgUtil::RenderBin::setStateSet )
                , ( bp::arg("stateset") ) );
        
        }
        { //::osgUtil::RenderBin::sort
        
            typedef void ( ::osgUtil::RenderBin::*sort_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sort_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sort"
                , sort_function_type(&::osgUtil::RenderBin::sort)
                , default_sort_function_type(&RenderBin_wrapper::default_sort) );
        
        }
        { //::osgUtil::RenderBin::sortBackToFront
        
            typedef void ( ::osgUtil::RenderBin::*sortBackToFront_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sortBackToFront_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sortBackToFront"
                , sortBackToFront_function_type(&::osgUtil::RenderBin::sortBackToFront)
                , default_sortBackToFront_function_type(&RenderBin_wrapper::default_sortBackToFront) );
        
        }
        { //::osgUtil::RenderBin::sortByState
        
            typedef void ( ::osgUtil::RenderBin::*sortByState_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sortByState_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sortByState"
                , sortByState_function_type(&::osgUtil::RenderBin::sortByState)
                , default_sortByState_function_type(&RenderBin_wrapper::default_sortByState) );
        
        }
        { //::osgUtil::RenderBin::sortByStateThenFrontToBack
        
            typedef void ( ::osgUtil::RenderBin::*sortByStateThenFrontToBack_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sortByStateThenFrontToBack_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sortByStateThenFrontToBack"
                , sortByStateThenFrontToBack_function_type(&::osgUtil::RenderBin::sortByStateThenFrontToBack)
                , default_sortByStateThenFrontToBack_function_type(&RenderBin_wrapper::default_sortByStateThenFrontToBack) );
        
        }
        { //::osgUtil::RenderBin::sortFrontToBack
        
            typedef void ( ::osgUtil::RenderBin::*sortFrontToBack_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sortFrontToBack_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sortFrontToBack"
                , sortFrontToBack_function_type(&::osgUtil::RenderBin::sortFrontToBack)
                , default_sortFrontToBack_function_type(&RenderBin_wrapper::default_sortFrontToBack) );
        
        }
        { //::osgUtil::RenderBin::sortImplementation
        
            typedef void ( ::osgUtil::RenderBin::*sortImplementation_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sortImplementation_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sortImplementation"
                , sortImplementation_function_type(&::osgUtil::RenderBin::sortImplementation)
                , default_sortImplementation_function_type(&RenderBin_wrapper::default_sortImplementation) );
        
        }
        { //::osgUtil::RenderBin::sortTraversalOrder
        
            typedef void ( ::osgUtil::RenderBin::*sortTraversalOrder_function_type )(  ) ;
            typedef void ( RenderBin_wrapper::*default_sortTraversalOrder_function_type )(  ) ;
            
            RenderBin_exposer.def( 
                "sortTraversalOrder"
                , sortTraversalOrder_function_type(&::osgUtil::RenderBin::sortTraversalOrder)
                , default_sortTraversalOrder_function_type(&RenderBin_wrapper::default_sortTraversalOrder) );
        
        }
        RenderBin_exposer.staticmethod( "addRenderBinPrototype" );
        RenderBin_exposer.staticmethod( "createRenderBin" );
        RenderBin_exposer.staticmethod( "getDefaultRenderBinSortMode" );
        RenderBin_exposer.staticmethod( "getRenderBinPrototype" );
        RenderBin_exposer.staticmethod( "removeRenderBinPrototype" );
        RenderBin_exposer.staticmethod( "setDefaultRenderBinSortMode" );
    }

}
