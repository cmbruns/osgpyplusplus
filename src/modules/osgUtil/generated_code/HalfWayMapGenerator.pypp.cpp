// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgUtil.h"
#include "wrap_referenced.h"
#include "HalfWayMapGenerator.pypp.hpp"

namespace bp = boost::python;

struct HalfWayMapGenerator_wrapper : osgUtil::HalfWayMapGenerator, bp::wrapper< osgUtil::HalfWayMapGenerator > {

    HalfWayMapGenerator_wrapper(::osg::Vec3 const & light_direction, int texture_size=64 )
    : osgUtil::HalfWayMapGenerator( boost::ref(light_direction), texture_size )
      , bp::wrapper< osgUtil::HalfWayMapGenerator >(){
        // constructor
    
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Referenced::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Referenced::setThreadSafeRefUnref( threadSafe );
    }

};

void register_HalfWayMapGenerator_class(){

    { //::osgUtil::HalfWayMapGenerator
        typedef bp::class_< HalfWayMapGenerator_wrapper, bp::bases< osgUtil::CubeMapGenerator >, osg::ref_ptr< HalfWayMapGenerator_wrapper >, boost::noncopyable > HalfWayMapGenerator_exposer_t;
        HalfWayMapGenerator_exposer_t HalfWayMapGenerator_exposer = HalfWayMapGenerator_exposer_t( "HalfWayMapGenerator", bp::no_init );
        bp::scope HalfWayMapGenerator_scope( HalfWayMapGenerator_exposer );
        HalfWayMapGenerator_exposer.def( bp::init< osg::Vec3 const &, bp::optional< int > >(( bp::arg("light_direction"), bp::arg("texture_size")=(int)(64) )) );
        bp::implicitly_convertible< osg::Vec3 const &, osgUtil::HalfWayMapGenerator >();
    }

}
