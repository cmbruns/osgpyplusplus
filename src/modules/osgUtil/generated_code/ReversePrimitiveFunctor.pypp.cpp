// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgUtil.h"
#include "ReversePrimitiveFunctor.pypp.hpp"

namespace bp = boost::python;

struct ReversePrimitiveFunctor_wrapper : osgUtil::ReversePrimitiveFunctor, bp::wrapper< osgUtil::ReversePrimitiveFunctor > {

    ReversePrimitiveFunctor_wrapper(osgUtil::ReversePrimitiveFunctor const & arg )
    : osgUtil::ReversePrimitiveFunctor( arg )
      , bp::wrapper< osgUtil::ReversePrimitiveFunctor >(){
        // copy constructor
        
    }

    ReversePrimitiveFunctor_wrapper()
    : osgUtil::ReversePrimitiveFunctor()
      , bp::wrapper< osgUtil::ReversePrimitiveFunctor >(){
        // null constructor
        
    }

    virtual void begin( ::GLenum mode ) {
        if( bp::override func_begin = this->get_override( "begin" ) )
            func_begin( mode );
        else{
            this->osgUtil::ReversePrimitiveFunctor::begin( mode );
        }
    }
    
    void default_begin( ::GLenum mode ) {
        osgUtil::ReversePrimitiveFunctor::begin( mode );
    }

    virtual void drawArrays( ::GLenum mode, ::GLint first, ::GLsizei count ) {
        if( bp::override func_drawArrays = this->get_override( "drawArrays" ) )
            func_drawArrays( mode, first, count );
        else{
            this->osgUtil::ReversePrimitiveFunctor::drawArrays( mode, first, count );
        }
    }
    
    void default_drawArrays( ::GLenum mode, ::GLint first, ::GLsizei count ) {
        osgUtil::ReversePrimitiveFunctor::drawArrays( mode, first, count );
    }

    virtual void drawElements( ::GLenum mode, ::GLsizei count, ::GLubyte const * indices ) {
        if( bp::override func_drawElements = this->get_override( "drawElements" ) )
            func_drawElements( mode, count, indices );
        else{
            this->osgUtil::ReversePrimitiveFunctor::drawElements( mode, count, indices );
        }
    }
    
    void default_drawElements( ::GLenum mode, ::GLsizei count, ::GLubyte const * indices ) {
        osgUtil::ReversePrimitiveFunctor::drawElements( mode, count, indices );
    }

    virtual void drawElements( ::GLenum mode, ::GLsizei count, ::GLushort const * indices ) {
        if( bp::override func_drawElements = this->get_override( "drawElements" ) )
            func_drawElements( mode, count, indices );
        else{
            this->osgUtil::ReversePrimitiveFunctor::drawElements( mode, count, indices );
        }
    }
    
    void default_drawElements( ::GLenum mode, ::GLsizei count, ::GLushort const * indices ) {
        osgUtil::ReversePrimitiveFunctor::drawElements( mode, count, indices );
    }

    virtual void drawElements( ::GLenum mode, ::GLsizei count, ::GLuint const * indices ) {
        if( bp::override func_drawElements = this->get_override( "drawElements" ) )
            func_drawElements( mode, count, indices );
        else{
            this->osgUtil::ReversePrimitiveFunctor::drawElements( mode, count, indices );
        }
    }
    
    void default_drawElements( ::GLenum mode, ::GLsizei count, ::GLuint const * indices ) {
        osgUtil::ReversePrimitiveFunctor::drawElements( mode, count, indices );
    }

    virtual void end(  ) {
        if( bp::override func_end = this->get_override( "end" ) )
            func_end(  );
        else{
            this->osgUtil::ReversePrimitiveFunctor::end(  );
        }
    }
    
    void default_end(  ) {
        osgUtil::ReversePrimitiveFunctor::end( );
    }

    virtual void setVertexArray( unsigned int arg0, ::osg::Vec2 const * arg1 ) {
        if( bp::override func_setVertexArray = this->get_override( "setVertexArray" ) )
            func_setVertexArray( arg0, boost::python::ptr(arg1) );
        else{
            this->osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
        }
    }
    
    void default_setVertexArray( unsigned int arg0, ::osg::Vec2 const * arg1 ) {
        osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
    }

    virtual void setVertexArray( unsigned int arg0, ::osg::Vec3 const * arg1 ) {
        if( bp::override func_setVertexArray = this->get_override( "setVertexArray" ) )
            func_setVertexArray( arg0, boost::python::ptr(arg1) );
        else{
            this->osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
        }
    }
    
    void default_setVertexArray( unsigned int arg0, ::osg::Vec3 const * arg1 ) {
        osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
    }

    virtual void setVertexArray( unsigned int arg0, ::osg::Vec4 const * arg1 ) {
        if( bp::override func_setVertexArray = this->get_override( "setVertexArray" ) )
            func_setVertexArray( arg0, boost::python::ptr(arg1) );
        else{
            this->osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
        }
    }
    
    void default_setVertexArray( unsigned int arg0, ::osg::Vec4 const * arg1 ) {
        osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
    }

    virtual void setVertexArray( unsigned int arg0, ::osg::Vec2d const * arg1 ) {
        if( bp::override func_setVertexArray = this->get_override( "setVertexArray" ) )
            func_setVertexArray( arg0, boost::python::ptr(arg1) );
        else{
            this->osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
        }
    }
    
    void default_setVertexArray( unsigned int arg0, ::osg::Vec2d const * arg1 ) {
        osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
    }

    virtual void setVertexArray( unsigned int arg0, ::osg::Vec3d const * arg1 ) {
        if( bp::override func_setVertexArray = this->get_override( "setVertexArray" ) )
            func_setVertexArray( arg0, boost::python::ptr(arg1) );
        else{
            this->osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
        }
    }
    
    void default_setVertexArray( unsigned int arg0, ::osg::Vec3d const * arg1 ) {
        osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
    }

    virtual void setVertexArray( unsigned int arg0, ::osg::Vec4d const * arg1 ) {
        if( bp::override func_setVertexArray = this->get_override( "setVertexArray" ) )
            func_setVertexArray( arg0, boost::python::ptr(arg1) );
        else{
            this->osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
        }
    }
    
    void default_setVertexArray( unsigned int arg0, ::osg::Vec4d const * arg1 ) {
        osgUtil::ReversePrimitiveFunctor::setVertexArray( arg0, boost::python::ptr(arg1) );
    }

    virtual void vertex( unsigned int arg0 ) {
        if( bp::override func_vertex = this->get_override( "vertex" ) )
            func_vertex( arg0 );
        else{
            this->osgUtil::ReversePrimitiveFunctor::vertex( arg0 );
        }
    }
    
    void default_vertex( unsigned int arg0 ) {
        osgUtil::ReversePrimitiveFunctor::vertex( arg0 );
    }

};

void register_ReversePrimitiveFunctor_class(){

    bp::class_< ReversePrimitiveFunctor_wrapper, bp::bases< ::osg::PrimitiveIndexFunctor > >( "ReversePrimitiveFunctor" )    
        .def( 
            "begin"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( ::GLenum ) )(&::osgUtil::ReversePrimitiveFunctor::begin)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( ::GLenum ) )(&ReversePrimitiveFunctor_wrapper::default_begin)
            , ( bp::arg("mode") ) )    
        .def( 
            "drawArrays"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( ::GLenum,::GLint,::GLsizei ) )(&::osgUtil::ReversePrimitiveFunctor::drawArrays)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( ::GLenum,::GLint,::GLsizei ) )(&ReversePrimitiveFunctor_wrapper::default_drawArrays)
            , ( bp::arg("mode"), bp::arg("first"), bp::arg("count") ) )    
        .def( 
            "drawElements"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( ::GLenum,::GLsizei,::GLubyte const * ) )(&::osgUtil::ReversePrimitiveFunctor::drawElements)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( ::GLenum,::GLsizei,::GLubyte const * ) )(&ReversePrimitiveFunctor_wrapper::default_drawElements)
            , ( bp::arg("mode"), bp::arg("count"), bp::arg("indices") ) )    
        .def( 
            "drawElements"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( ::GLenum,::GLsizei,::GLushort const * ) )(&::osgUtil::ReversePrimitiveFunctor::drawElements)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( ::GLenum,::GLsizei,::GLushort const * ) )(&ReversePrimitiveFunctor_wrapper::default_drawElements)
            , ( bp::arg("mode"), bp::arg("count"), bp::arg("indices") ) )    
        .def( 
            "drawElements"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( ::GLenum,::GLsizei,::GLuint const * ) )(&::osgUtil::ReversePrimitiveFunctor::drawElements)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( ::GLenum,::GLsizei,::GLuint const * ) )(&ReversePrimitiveFunctor_wrapper::default_drawElements)
            , ( bp::arg("mode"), bp::arg("count"), bp::arg("indices") ) )    
        .def( 
            "end"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )(  ) )(&::osgUtil::ReversePrimitiveFunctor::end)
            , (void ( ReversePrimitiveFunctor_wrapper::* )(  ) )(&ReversePrimitiveFunctor_wrapper::default_end) )    
        .def( 
            "getReversedPrimitiveSet"
            , (::osg::PrimitiveSet * ( ::osgUtil::ReversePrimitiveFunctor::* )(  ) )( &::osgUtil::ReversePrimitiveFunctor::getReversedPrimitiveSet )
            , bp::return_internal_reference< >() )    
        .def( 
            "setVertexArray"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int,::osg::Vec2 const * ) )(&::osgUtil::ReversePrimitiveFunctor::setVertexArray)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int,::osg::Vec2 const * ) )(&ReversePrimitiveFunctor_wrapper::default_setVertexArray)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "setVertexArray"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int,::osg::Vec3 const * ) )(&::osgUtil::ReversePrimitiveFunctor::setVertexArray)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int,::osg::Vec3 const * ) )(&ReversePrimitiveFunctor_wrapper::default_setVertexArray)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "setVertexArray"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int,::osg::Vec4 const * ) )(&::osgUtil::ReversePrimitiveFunctor::setVertexArray)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int,::osg::Vec4 const * ) )(&ReversePrimitiveFunctor_wrapper::default_setVertexArray)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "setVertexArray"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int,::osg::Vec2d const * ) )(&::osgUtil::ReversePrimitiveFunctor::setVertexArray)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int,::osg::Vec2d const * ) )(&ReversePrimitiveFunctor_wrapper::default_setVertexArray)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "setVertexArray"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int,::osg::Vec3d const * ) )(&::osgUtil::ReversePrimitiveFunctor::setVertexArray)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int,::osg::Vec3d const * ) )(&ReversePrimitiveFunctor_wrapper::default_setVertexArray)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "setVertexArray"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int,::osg::Vec4d const * ) )(&::osgUtil::ReversePrimitiveFunctor::setVertexArray)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int,::osg::Vec4d const * ) )(&ReversePrimitiveFunctor_wrapper::default_setVertexArray)
            , ( bp::arg("arg0"), bp::arg("arg1") ) )    
        .def( 
            "vertex"
            , (void ( ::osgUtil::ReversePrimitiveFunctor::* )( unsigned int ) )(&::osgUtil::ReversePrimitiveFunctor::vertex)
            , (void ( ReversePrimitiveFunctor_wrapper::* )( unsigned int ) )(&ReversePrimitiveFunctor_wrapper::default_vertex)
            , ( bp::arg("arg0") ) )    
        .def_readwrite( "_reversedPrimitiveSet", &osgUtil::ReversePrimitiveFunctor::_reversedPrimitiveSet );

}
