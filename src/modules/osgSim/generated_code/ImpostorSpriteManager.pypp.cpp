// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgSim.h"
#include "wrap_referenced.h"
#include "ImpostorSpriteManager.pypp.hpp"

namespace bp = boost::python;

void register_ImpostorSpriteManager_class(){

    bp::class_< osgSim::ImpostorSpriteManager, bp::bases< ::osg::Referenced >, osg::ref_ptr< ::osgSim::ImpostorSpriteManager >, boost::noncopyable >( "ImpostorSpriteManager", " Helper class for managing the reuse of ImpostorSprite resources.", bp::no_init )    
        .def( bp::init< >(" Helper class for managing the reuse of ImpostorSprite resources.") )    
        .def( 
            "createOrReuseImpostorSprite"
            , (::osgSim::ImpostorSprite * ( ::osgSim::ImpostorSpriteManager::* )( int,int,unsigned int ) )( &::osgSim::ImpostorSpriteManager::createOrReuseImpostorSprite )
            , ( bp::arg("s"), bp::arg("t"), bp::arg("frameNumber") )
            , bp::return_internal_reference< >() )    
        .def( 
            "createOrReuseStateSet"
            , (::osg::StateSet * ( ::osgSim::ImpostorSpriteManager::* )(  ) )( &::osgSim::ImpostorSpriteManager::createOrReuseStateSet )
            , bp::return_internal_reference< >() )    
        .def( 
            "empty"
            , (bool ( ::osgSim::ImpostorSpriteManager::* )(  ) const)( &::osgSim::ImpostorSpriteManager::empty ) )    
        .def( 
            "first"
            , (::osgSim::ImpostorSprite * ( ::osgSim::ImpostorSpriteManager::* )(  ) )( &::osgSim::ImpostorSpriteManager::first )
            , bp::return_internal_reference< >() )    
        .def( 
            "last"
            , (::osgSim::ImpostorSprite * ( ::osgSim::ImpostorSpriteManager::* )(  ) )( &::osgSim::ImpostorSpriteManager::last )
            , bp::return_internal_reference< >() )    
        .def( 
            "push_back"
            , (void ( ::osgSim::ImpostorSpriteManager::* )( ::osgSim::ImpostorSprite * ) )( &::osgSim::ImpostorSpriteManager::push_back )
            , ( bp::arg("is") ) )    
        .def( 
            "remove"
            , (void ( ::osgSim::ImpostorSpriteManager::* )( ::osgSim::ImpostorSprite * ) )( &::osgSim::ImpostorSpriteManager::remove )
            , ( bp::arg("is") ) )    
        .def( 
            "reset"
            , (void ( ::osgSim::ImpostorSpriteManager::* )(  ) )( &::osgSim::ImpostorSpriteManager::reset ) );

}
