// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "__convenience.pypp.hpp"
#include "wrap_osgDB.h"
#include "wrap_referenced.h"
#include "ReaderWriter.pypp.hpp"

namespace bp = boost::python;

struct ReaderWriter_wrapper : osgDB::ReaderWriter, bp::wrapper< osgDB::ReaderWriter > {

    ReaderWriter_wrapper( )
    : osgDB::ReaderWriter( )
      , bp::wrapper< osgDB::ReaderWriter >(){
        // null constructor
    
    }

    virtual bool acceptsExtension( ::std::string const & arg0 ) const  {
        if( bp::override func_acceptsExtension = this->get_override( "acceptsExtension" ) )
            return func_acceptsExtension( arg0 );
        else{
            return this->osgDB::ReaderWriter::acceptsExtension( arg0 );
        }
    }
    
    bool default_acceptsExtension( ::std::string const & arg0 ) const  {
        return osgDB::ReaderWriter::acceptsExtension( arg0 );
    }

    virtual bool acceptsProtocol( ::std::string const & protocol ) const  {
        if( bp::override func_acceptsProtocol = this->get_override( "acceptsProtocol" ) )
            return func_acceptsProtocol( protocol );
        else{
            return this->osgDB::ReaderWriter::acceptsProtocol( protocol );
        }
    }
    
    bool default_acceptsProtocol( ::std::string const & protocol ) const  {
        return osgDB::ReaderWriter::acceptsProtocol( protocol );
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osgDB::ReaderWriter::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osgDB::ReaderWriter::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osgDB::ReaderWriter::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osgDB::ReaderWriter::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osgDB::ReaderWriter::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osgDB::ReaderWriter::cloneType( );
    }

    virtual bool fileExists( ::std::string const & filename, ::osgDB::Options const * options ) const  {
        if( bp::override func_fileExists = this->get_override( "fileExists" ) )
            return func_fileExists( filename, boost::python::ptr(options) );
        else{
            return this->osgDB::ReaderWriter::fileExists( filename, boost::python::ptr(options) );
        }
    }
    
    bool default_fileExists( ::std::string const & filename, ::osgDB::Options const * options ) const  {
        return osgDB::ReaderWriter::fileExists( filename, boost::python::ptr(options) );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osgDB::ReaderWriter::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osgDB::ReaderWriter::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osgDB::ReaderWriter::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osgDB::ReaderWriter::libraryName( );
    }

    virtual ::osgDB::ReaderWriter::ReadResult openArchive( ::std::string const & arg0, ::osgDB::ReaderWriter::ArchiveStatus arg1, unsigned int arg2=4096, ::osgDB::Options const * arg3=0l ) const  {
        if( bp::override func_openArchive = this->get_override( "openArchive" ) )
            return func_openArchive( arg0, arg1, arg2, boost::python::ptr(arg3) );
        else{
            return this->osgDB::ReaderWriter::openArchive( arg0, arg1, arg2, boost::python::ptr(arg3) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_openArchive( ::std::string const & arg0, ::osgDB::ReaderWriter::ArchiveStatus arg1, unsigned int arg2=4096, ::osgDB::Options const * arg3=0l ) const  {
        return osgDB::ReaderWriter::openArchive( arg0, arg1, arg2, boost::python::ptr(arg3) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult openArchive( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_openArchive = this->get_override( "openArchive" ) )
            return func_openArchive( boost::ref(arg0), boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::openArchive( boost::ref(arg0), boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_openArchive( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::openArchive( boost::ref(arg0), boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readHeightField( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readHeightField = this->get_override( "readHeightField" ) )
            return func_readHeightField( arg0, boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readHeightField( arg0, boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readHeightField( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readHeightField( arg0, boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readHeightField( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readHeightField = this->get_override( "readHeightField" ) )
            return func_readHeightField( boost::ref(arg0), boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readHeightField( boost::ref(arg0), boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readHeightField( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readHeightField( boost::ref(arg0), boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readImage( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readImage = this->get_override( "readImage" ) )
            return func_readImage( arg0, boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readImage( arg0, boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readImage( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readImage( arg0, boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readImage( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readImage = this->get_override( "readImage" ) )
            return func_readImage( boost::ref(arg0), boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readImage( boost::ref(arg0), boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readImage( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readImage( boost::ref(arg0), boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readNode( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readNode = this->get_override( "readNode" ) )
            return func_readNode( arg0, boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readNode( arg0, boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readNode( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readNode( arg0, boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readNode( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readNode = this->get_override( "readNode" ) )
            return func_readNode( boost::ref(arg0), boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readNode( boost::ref(arg0), boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readNode( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readNode( boost::ref(arg0), boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readObject( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readObject = this->get_override( "readObject" ) )
            return func_readObject( arg0, boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readObject( arg0, boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readObject( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readObject( arg0, boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readObject( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readObject = this->get_override( "readObject" ) )
            return func_readObject( boost::ref(arg0), boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readObject( boost::ref(arg0), boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readObject( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readObject( boost::ref(arg0), boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readShader( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readShader = this->get_override( "readShader" ) )
            return func_readShader( arg0, boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readShader( arg0, boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readShader( ::std::string const & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readShader( arg0, boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::ReadResult readShader( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        if( bp::override func_readShader = this->get_override( "readShader" ) )
            return func_readShader( boost::ref(arg0), boost::python::ptr(arg1) );
        else{
            return this->osgDB::ReaderWriter::readShader( boost::ref(arg0), boost::python::ptr(arg1) );
        }
    }
    
    ::osgDB::ReaderWriter::ReadResult default_readShader( ::std::istream & arg0, ::osgDB::Options const * arg1=0l ) const  {
        return osgDB::ReaderWriter::readShader( boost::ref(arg0), boost::python::ptr(arg1) );
    }

    virtual ::osgDB::ReaderWriter::Features supportedFeatures(  ) const  {
        if( bp::override func_supportedFeatures = this->get_override( "supportedFeatures" ) )
            return func_supportedFeatures(  );
        else{
            return this->osgDB::ReaderWriter::supportedFeatures(  );
        }
    }
    
    ::osgDB::ReaderWriter::Features default_supportedFeatures(  ) const  {
        return osgDB::ReaderWriter::supportedFeatures( );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeHeightField( ::osg::HeightField const & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeHeightField = this->get_override( "writeHeightField" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeHeightField.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeHeightField( boost::ref(arg0), arg1, boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeHeightField_492ba9227016a7cdc011f560ee63846b( ::osgDB::ReaderWriter const & inst, ::osg::HeightField & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeHeightField(arg0, arg1, arg2);
        }
        else{
            result = inst.writeHeightField(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeHeightField( ::osg::HeightField const & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeHeightField = this->get_override( "writeHeightField" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeHeightField.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeHeightField( boost::ref(arg0), boost::ref(arg1), boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeHeightField_9396c211b31e432102458b3f4acc5b01( ::osgDB::ReaderWriter const & inst, ::osg::HeightField & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeHeightField(arg0, arg1, arg2);
        }
        else{
            result = inst.writeHeightField(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeImage( ::osg::Image const & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeImage = this->get_override( "writeImage" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeImage.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeImage( boost::ref(arg0), arg1, boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeImage_48409f166d256ec2a1ce1aba7ba91b41( ::osgDB::ReaderWriter const & inst, ::osg::Image & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeImage(arg0, arg1, arg2);
        }
        else{
            result = inst.writeImage(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeImage( ::osg::Image const & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeImage = this->get_override( "writeImage" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeImage.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeImage( boost::ref(arg0), boost::ref(arg1), boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeImage_09e0c822c73aac048a8706dbb950438f( ::osgDB::ReaderWriter const & inst, ::osg::Image & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeImage(arg0, arg1, arg2);
        }
        else{
            result = inst.writeImage(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeNode( ::osg::Node const & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeNode = this->get_override( "writeNode" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeNode.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeNode( boost::ref(arg0), arg1, boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeNode_94ab5d58c5431145dd0b29259e29a1e0( ::osgDB::ReaderWriter const & inst, ::osg::Node & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeNode(arg0, arg1, arg2);
        }
        else{
            result = inst.writeNode(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeNode( ::osg::Node const & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeNode = this->get_override( "writeNode" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeNode.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeNode( boost::ref(arg0), boost::ref(arg1), boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeNode_85ada25f9394d5ca11dce46130e109e3( ::osgDB::ReaderWriter const & inst, ::osg::Node & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeNode(arg0, arg1, arg2);
        }
        else{
            result = inst.writeNode(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeObject( ::osg::Object const & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeObject = this->get_override( "writeObject" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeObject.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeObject( boost::ref(arg0), arg1, boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeObject_4b217c12bc66236059a76e176772f392( ::osgDB::ReaderWriter const & inst, ::osg::Object & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeObject(arg0, arg1, arg2);
        }
        else{
            result = inst.writeObject(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeObject( ::osg::Object const & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeObject = this->get_override( "writeObject" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeObject.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeObject( boost::ref(arg0), boost::ref(arg1), boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeObject_86a17357be0e1c05716ddbecef039a10( ::osgDB::ReaderWriter const & inst, ::osg::Object & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeObject(arg0, arg1, arg2);
        }
        else{
            result = inst.writeObject(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeShader( ::osg::Shader const & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeShader = this->get_override( "writeShader" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeShader.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeShader( boost::ref(arg0), arg1, boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeShader_be57249f6a6e741afc4665bd121f54f9( ::osgDB::ReaderWriter const & inst, ::osg::Shader & arg0, ::std::string const & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeShader(arg0, arg1, arg2);
        }
        else{
            result = inst.writeShader(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual ::osgDB::ReaderWriter::WriteResult writeShader( ::osg::Shader const & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ) const  {
        namespace bpl = boost::python;
        if( bpl::override func_writeShader = this->get_override( "writeShader" ) ){
            bpl::object py_result = bpl::call<bpl::object>( func_writeShader.ptr(), arg0, arg1, arg2 );
            return bpl::extract< ::osgDB::ReaderWriter::WriteResult >( pyplus_conv::get_out_argument( py_result, 0 ) );
        }
        else{
            return osgDB::ReaderWriter::writeShader( boost::ref(arg0), boost::ref(arg1), boost::python::ptr(arg2) );
        }
    }
    
    static boost::python::object default_writeShader_88038c79c30b9deaaaed55931fcd9f34( ::osgDB::ReaderWriter const & inst, ::osg::Shader & arg0, ::std::ostream & arg1, ::osgDB::Options const * arg2=0l ){
        osgDB::ReaderWriter::WriteResult result;
        if( dynamic_cast< ReaderWriter_wrapper const* >( boost::addressof( inst ) ) ){
            result = inst.::osgDB::ReaderWriter::writeShader(arg0, arg1, arg2);
        }
        else{
            result = inst.writeShader(arg0, arg1, arg2);
        }
        return bp::object( result );
    }

    virtual void computeDataVariance(  ) {
        if( bp::override func_computeDataVariance = this->get_override( "computeDataVariance" ) )
            func_computeDataVariance(  );
        else{
            this->osg::Object::computeDataVariance(  );
        }
    }
    
    void default_computeDataVariance(  ) {
        osg::Object::computeDataVariance( );
    }

    virtual ::osg::Referenced * getUserData(  ) {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::Object::getUserData(  );
        }
    }
    
    ::osg::Referenced * default_getUserData(  ) {
        return osg::Object::getUserData( );
    }

    virtual ::osg::Referenced const * getUserData(  ) const  {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::Object::getUserData(  );
        }
    }
    
    ::osg::Referenced const * default_getUserData(  ) const  {
        return osg::Object::getUserData( );
    }

    virtual void setName( ::std::string const & name ) {
        if( bp::override func_setName = this->get_override( "setName" ) )
            func_setName( name );
        else{
            this->osg::Object::setName( name );
        }
    }
    
    void default_setName( ::std::string const & name ) {
        osg::Object::setName( name );
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Object::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Object::setThreadSafeRefUnref( threadSafe );
    }

    virtual void setUserData( ::osg::Referenced * obj ) {
        if( bp::override func_setUserData = this->get_override( "setUserData" ) )
            func_setUserData( boost::python::ptr(obj) );
        else{
            this->osg::Object::setUserData( boost::python::ptr(obj) );
        }
    }
    
    void default_setUserData( ::osg::Referenced * obj ) {
        osg::Object::setUserData( boost::python::ptr(obj) );
    }

};

void register_ReaderWriter_class(){

    { //::osgDB::ReaderWriter
        typedef bp::class_< ReaderWriter_wrapper, bp::bases< ::osg::Object >, osg::ref_ptr< ReaderWriter_wrapper >, boost::noncopyable > ReaderWriter_exposer_t;
        ReaderWriter_exposer_t ReaderWriter_exposer = ReaderWriter_exposer_t( "ReaderWriter", bp::init< >() );
        bp::scope ReaderWriter_scope( ReaderWriter_exposer );
        bp::enum_< osgDB::ReaderWriter::ArchiveStatus>("ArchiveStatus")
            .value("READ", osgDB::ReaderWriter::READ)
            .value("WRITE", osgDB::ReaderWriter::WRITE)
            .value("CREATE", osgDB::ReaderWriter::CREATE)
            .export_values()
            ;
        bp::enum_< osgDB::ReaderWriter::Features>("Features")
            .value("FEATURE_NONE", osgDB::ReaderWriter::FEATURE_NONE)
            .value("FEATURE_READ_OBJECT", osgDB::ReaderWriter::FEATURE_READ_OBJECT)
            .value("FEATURE_READ_IMAGE", osgDB::ReaderWriter::FEATURE_READ_IMAGE)
            .value("FEATURE_READ_HEIGHT_FIELD", osgDB::ReaderWriter::FEATURE_READ_HEIGHT_FIELD)
            .value("FEATURE_READ_NODE", osgDB::ReaderWriter::FEATURE_READ_NODE)
            .value("FEATURE_READ_SHADER", osgDB::ReaderWriter::FEATURE_READ_SHADER)
            .value("FEATURE_WRITE_OBJECT", osgDB::ReaderWriter::FEATURE_WRITE_OBJECT)
            .value("FEATURE_WRITE_IMAGE", osgDB::ReaderWriter::FEATURE_WRITE_IMAGE)
            .value("FEATURE_WRITE_HEIGHT_FIELD", osgDB::ReaderWriter::FEATURE_WRITE_HEIGHT_FIELD)
            .value("FEATURE_WRITE_NODE", osgDB::ReaderWriter::FEATURE_WRITE_NODE)
            .value("FEATURE_WRITE_SHADER", osgDB::ReaderWriter::FEATURE_WRITE_SHADER)
            .value("FEATURE_ALL", osgDB::ReaderWriter::FEATURE_ALL)
            .export_values()
            ;
        { //::osgDB::ReaderWriter::ReadResult
            typedef bp::class_< osgDB::ReaderWriter::ReadResult > ReadResult_exposer_t;
            ReadResult_exposer_t ReadResult_exposer = ReadResult_exposer_t( "ReadResult", bp::init< bp::optional< osgDB::ReaderWriter::ReadResult::ReadStatus > >(( bp::arg("status")=(long)(::osgDB::ReaderWriter::ReadResult::FILE_NOT_HANDLED) )) );
            bp::scope ReadResult_scope( ReadResult_exposer );
            bp::enum_< osgDB::ReaderWriter::ReadResult::ReadStatus>("ReadStatus")
                .value("NOT_IMPLEMENTED", osgDB::ReaderWriter::ReadResult::NOT_IMPLEMENTED)
                .value("FILE_NOT_HANDLED", osgDB::ReaderWriter::ReadResult::FILE_NOT_HANDLED)
                .value("FILE_NOT_FOUND", osgDB::ReaderWriter::ReadResult::FILE_NOT_FOUND)
                .value("ERROR_IN_READING_FILE", osgDB::ReaderWriter::ReadResult::ERROR_IN_READING_FILE)
                .value("FILE_LOADED", osgDB::ReaderWriter::ReadResult::FILE_LOADED)
                .value("FILE_LOADED_FROM_CACHE", osgDB::ReaderWriter::ReadResult::FILE_LOADED_FROM_CACHE)
                .value("FILE_REQUESTED", osgDB::ReaderWriter::ReadResult::FILE_REQUESTED)
                .value("INSUFFICIENT_MEMORY_TO_LOAD", osgDB::ReaderWriter::ReadResult::INSUFFICIENT_MEMORY_TO_LOAD)
                .export_values()
                ;
            bp::implicitly_convertible< osgDB::ReaderWriter::ReadResult::ReadStatus, osgDB::ReaderWriter::ReadResult >();
            ReadResult_exposer.def( bp::init< std::string const & >(( bp::arg("m") )) );
            bp::implicitly_convertible< std::string const &, osgDB::ReaderWriter::ReadResult >();
            ReadResult_exposer.def( bp::init< osg::Object *, bp::optional< osgDB::ReaderWriter::ReadResult::ReadStatus > >(( bp::arg("obj"), bp::arg("status")=(long)(::osgDB::ReaderWriter::ReadResult::FILE_LOADED) )) );
            bp::implicitly_convertible< osg::Object *, osgDB::ReaderWriter::ReadResult >();
            ReadResult_exposer.def( bp::init< osgDB::ReaderWriter::ReadResult const & >(( bp::arg("rr") )) );
            { //::osgDB::ReaderWriter::ReadResult::error
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*error_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "error"
                    , error_function_type( &::osgDB::ReaderWriter::ReadResult::error ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::getArchive
            
                typedef ::osgDB::Archive * ( ::osgDB::ReaderWriter::ReadResult::*getArchive_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "getArchive"
                    , getArchive_function_type( &::osgDB::ReaderWriter::ReadResult::getArchive )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::getHeightField
            
                typedef ::osg::HeightField * ( ::osgDB::ReaderWriter::ReadResult::*getHeightField_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "getHeightField"
                    , getHeightField_function_type( &::osgDB::ReaderWriter::ReadResult::getHeightField )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::getImage
            
                typedef ::osg::Image * ( ::osgDB::ReaderWriter::ReadResult::*getImage_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "getImage"
                    , getImage_function_type( &::osgDB::ReaderWriter::ReadResult::getImage )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::getNode
            
                typedef ::osg::Node * ( ::osgDB::ReaderWriter::ReadResult::*getNode_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "getNode"
                    , getNode_function_type( &::osgDB::ReaderWriter::ReadResult::getNode )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::getObject
            
                typedef ::osg::Object * ( ::osgDB::ReaderWriter::ReadResult::*getObject_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "getObject"
                    , getObject_function_type( &::osgDB::ReaderWriter::ReadResult::getObject )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::getShader
            
                typedef ::osg::Shader * ( ::osgDB::ReaderWriter::ReadResult::*getShader_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "getShader"
                    , getShader_function_type( &::osgDB::ReaderWriter::ReadResult::getShader )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::loadedFromCache
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*loadedFromCache_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "loadedFromCache"
                    , loadedFromCache_function_type( &::osgDB::ReaderWriter::ReadResult::loadedFromCache ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::message
            
                typedef ::std::string & ( ::osgDB::ReaderWriter::ReadResult::*message_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "message"
                    , message_function_type( &::osgDB::ReaderWriter::ReadResult::message )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::message
            
                typedef ::std::string const & ( ::osgDB::ReaderWriter::ReadResult::*message_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "message"
                    , message_function_type( &::osgDB::ReaderWriter::ReadResult::message )
                    , bp::return_value_policy< bp::copy_const_reference >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::notEnoughMemory
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*notEnoughMemory_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "notEnoughMemory"
                    , notEnoughMemory_function_type( &::osgDB::ReaderWriter::ReadResult::notEnoughMemory ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::notFound
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*notFound_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "notFound"
                    , notFound_function_type( &::osgDB::ReaderWriter::ReadResult::notFound ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::notHandled
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*notHandled_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "notHandled"
                    , notHandled_function_type( &::osgDB::ReaderWriter::ReadResult::notHandled ) );
            
            }
            ReadResult_exposer.def( bp::self < bp::self );
            { //::osgDB::ReaderWriter::ReadResult::status
            
                typedef ::osgDB::ReaderWriter::ReadResult::ReadStatus ( ::osgDB::ReaderWriter::ReadResult::*status_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "status"
                    , status_function_type( &::osgDB::ReaderWriter::ReadResult::status ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::success
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*success_function_type )(  ) const;
                
                ReadResult_exposer.def( 
                    "success"
                    , success_function_type( &::osgDB::ReaderWriter::ReadResult::success ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::takeArchive
            
                typedef ::osgDB::Archive * ( ::osgDB::ReaderWriter::ReadResult::*takeArchive_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "takeArchive"
                    , takeArchive_function_type( &::osgDB::ReaderWriter::ReadResult::takeArchive )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::takeHeightField
            
                typedef ::osg::HeightField * ( ::osgDB::ReaderWriter::ReadResult::*takeHeightField_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "takeHeightField"
                    , takeHeightField_function_type( &::osgDB::ReaderWriter::ReadResult::takeHeightField )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::takeImage
            
                typedef ::osg::Image * ( ::osgDB::ReaderWriter::ReadResult::*takeImage_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "takeImage"
                    , takeImage_function_type( &::osgDB::ReaderWriter::ReadResult::takeImage )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::takeNode
            
                typedef ::osg::Node * ( ::osgDB::ReaderWriter::ReadResult::*takeNode_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "takeNode"
                    , takeNode_function_type( &::osgDB::ReaderWriter::ReadResult::takeNode )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::takeObject
            
                typedef ::osg::Object * ( ::osgDB::ReaderWriter::ReadResult::*takeObject_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "takeObject"
                    , takeObject_function_type( &::osgDB::ReaderWriter::ReadResult::takeObject )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::takeShader
            
                typedef ::osg::Shader * ( ::osgDB::ReaderWriter::ReadResult::*takeShader_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "takeShader"
                    , takeShader_function_type( &::osgDB::ReaderWriter::ReadResult::takeShader )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::validArchive
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*validArchive_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "validArchive"
                    , validArchive_function_type( &::osgDB::ReaderWriter::ReadResult::validArchive ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::validHeightField
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*validHeightField_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "validHeightField"
                    , validHeightField_function_type( &::osgDB::ReaderWriter::ReadResult::validHeightField ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::validImage
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*validImage_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "validImage"
                    , validImage_function_type( &::osgDB::ReaderWriter::ReadResult::validImage ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::validNode
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*validNode_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "validNode"
                    , validNode_function_type( &::osgDB::ReaderWriter::ReadResult::validNode ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::validObject
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*validObject_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "validObject"
                    , validObject_function_type( &::osgDB::ReaderWriter::ReadResult::validObject ) );
            
            }
            { //::osgDB::ReaderWriter::ReadResult::validShader
            
                typedef bool ( ::osgDB::ReaderWriter::ReadResult::*validShader_function_type )(  ) ;
                
                ReadResult_exposer.def( 
                    "validShader"
                    , validShader_function_type( &::osgDB::ReaderWriter::ReadResult::validShader ) );
            
            }
        }
        { //::osgDB::ReaderWriter::WriteResult
            typedef bp::class_< osgDB::ReaderWriter::WriteResult > WriteResult_exposer_t;
            WriteResult_exposer_t WriteResult_exposer = WriteResult_exposer_t( "WriteResult", bp::init< bp::optional< osgDB::ReaderWriter::WriteResult::WriteStatus > >(( bp::arg("status")=(long)(::osgDB::ReaderWriter::WriteResult::FILE_NOT_HANDLED) )) );
            bp::scope WriteResult_scope( WriteResult_exposer );
            bp::enum_< osgDB::ReaderWriter::WriteResult::WriteStatus>("WriteStatus")
                .value("NOT_IMPLEMENTED", osgDB::ReaderWriter::WriteResult::NOT_IMPLEMENTED)
                .value("FILE_NOT_HANDLED", osgDB::ReaderWriter::WriteResult::FILE_NOT_HANDLED)
                .value("ERROR_IN_WRITING_FILE", osgDB::ReaderWriter::WriteResult::ERROR_IN_WRITING_FILE)
                .value("FILE_SAVED", osgDB::ReaderWriter::WriteResult::FILE_SAVED)
                .export_values()
                ;
            bp::implicitly_convertible< osgDB::ReaderWriter::WriteResult::WriteStatus, osgDB::ReaderWriter::WriteResult >();
            WriteResult_exposer.def( bp::init< std::string const & >(( bp::arg("m") )) );
            bp::implicitly_convertible< std::string const &, osgDB::ReaderWriter::WriteResult >();
            WriteResult_exposer.def( bp::init< osgDB::ReaderWriter::WriteResult const & >(( bp::arg("rr") )) );
            { //::osgDB::ReaderWriter::WriteResult::error
            
                typedef bool ( ::osgDB::ReaderWriter::WriteResult::*error_function_type )(  ) const;
                
                WriteResult_exposer.def( 
                    "error"
                    , error_function_type( &::osgDB::ReaderWriter::WriteResult::error ) );
            
            }
            { //::osgDB::ReaderWriter::WriteResult::message
            
                typedef ::std::string & ( ::osgDB::ReaderWriter::WriteResult::*message_function_type )(  ) ;
                
                WriteResult_exposer.def( 
                    "message"
                    , message_function_type( &::osgDB::ReaderWriter::WriteResult::message )
                    , bp::return_internal_reference< >() );
            
            }
            { //::osgDB::ReaderWriter::WriteResult::message
            
                typedef ::std::string const & ( ::osgDB::ReaderWriter::WriteResult::*message_function_type )(  ) const;
                
                WriteResult_exposer.def( 
                    "message"
                    , message_function_type( &::osgDB::ReaderWriter::WriteResult::message )
                    , bp::return_value_policy< bp::copy_const_reference >() );
            
            }
            { //::osgDB::ReaderWriter::WriteResult::notHandled
            
                typedef bool ( ::osgDB::ReaderWriter::WriteResult::*notHandled_function_type )(  ) const;
                
                WriteResult_exposer.def( 
                    "notHandled"
                    , notHandled_function_type( &::osgDB::ReaderWriter::WriteResult::notHandled ) );
            
            }
            WriteResult_exposer.def( bp::self < bp::self );
            { //::osgDB::ReaderWriter::WriteResult::status
            
                typedef ::osgDB::ReaderWriter::WriteResult::WriteStatus ( ::osgDB::ReaderWriter::WriteResult::*status_function_type )(  ) const;
                
                WriteResult_exposer.def( 
                    "status"
                    , status_function_type( &::osgDB::ReaderWriter::WriteResult::status ) );
            
            }
            { //::osgDB::ReaderWriter::WriteResult::success
            
                typedef bool ( ::osgDB::ReaderWriter::WriteResult::*success_function_type )(  ) const;
                
                WriteResult_exposer.def( 
                    "success"
                    , success_function_type( &::osgDB::ReaderWriter::WriteResult::success ) );
            
            }
        }
        { //::osgDB::ReaderWriter::acceptsExtension
        
            typedef bool ( ::osgDB::ReaderWriter::*acceptsExtension_function_type )( ::std::string const & ) const;
            typedef bool ( ReaderWriter_wrapper::*default_acceptsExtension_function_type )( ::std::string const & ) const;
            
            ReaderWriter_exposer.def( 
                "acceptsExtension"
                , acceptsExtension_function_type(&::osgDB::ReaderWriter::acceptsExtension)
                , default_acceptsExtension_function_type(&ReaderWriter_wrapper::default_acceptsExtension)
                , ( bp::arg("arg0") ) );
        
        }
        { //::osgDB::ReaderWriter::acceptsProtocol
        
            typedef bool ( ::osgDB::ReaderWriter::*acceptsProtocol_function_type )( ::std::string const & ) const;
            typedef bool ( ReaderWriter_wrapper::*default_acceptsProtocol_function_type )( ::std::string const & ) const;
            
            ReaderWriter_exposer.def( 
                "acceptsProtocol"
                , acceptsProtocol_function_type(&::osgDB::ReaderWriter::acceptsProtocol)
                , default_acceptsProtocol_function_type(&ReaderWriter_wrapper::default_acceptsProtocol)
                , ( bp::arg("protocol") ) );
        
        }
        { //::osgDB::ReaderWriter::className
        
            typedef char const * ( ::osgDB::ReaderWriter::*className_function_type )(  ) const;
            typedef char const * ( ReaderWriter_wrapper::*default_className_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "className"
                , className_function_type(&::osgDB::ReaderWriter::className)
                , default_className_function_type(&ReaderWriter_wrapper::default_className) );
        
        }
        { //::osgDB::ReaderWriter::clone
        
            typedef ::osg::Object * ( ::osgDB::ReaderWriter::*clone_function_type )( ::osg::CopyOp const & ) const;
            typedef ::osg::Object * ( ReaderWriter_wrapper::*default_clone_function_type )( ::osg::CopyOp const & ) const;
            
            ReaderWriter_exposer.def( 
                "clone"
                , clone_function_type(&::osgDB::ReaderWriter::clone)
                , default_clone_function_type(&ReaderWriter_wrapper::default_clone)
                , ( bp::arg("copyop") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::osgDB::ReaderWriter::cloneType
        
            typedef ::osg::Object * ( ::osgDB::ReaderWriter::*cloneType_function_type )(  ) const;
            typedef ::osg::Object * ( ReaderWriter_wrapper::*default_cloneType_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "cloneType"
                , cloneType_function_type(&::osgDB::ReaderWriter::cloneType)
                , default_cloneType_function_type(&ReaderWriter_wrapper::default_cloneType)
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::osgDB::ReaderWriter::featureAsString
        
            typedef ::std::list< std::string > ( *featureAsString_function_type )( ::osgDB::ReaderWriter::Features );
            
            ReaderWriter_exposer.def( 
                "featureAsString"
                , featureAsString_function_type( &::osgDB::ReaderWriter::featureAsString )
                , ( bp::arg("feature") ) );
        
        }
        { //::osgDB::ReaderWriter::fileExists
        
            typedef bool ( ::osgDB::ReaderWriter::*fileExists_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            typedef bool ( ReaderWriter_wrapper::*default_fileExists_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "fileExists"
                , fileExists_function_type(&::osgDB::ReaderWriter::fileExists)
                , default_fileExists_function_type(&ReaderWriter_wrapper::default_fileExists)
                , ( bp::arg("filename"), bp::arg("options") ) );
        
        }
        { //::osgDB::ReaderWriter::isSameKindAs
        
            typedef bool ( ::osgDB::ReaderWriter::*isSameKindAs_function_type )( ::osg::Object const * ) const;
            typedef bool ( ReaderWriter_wrapper::*default_isSameKindAs_function_type )( ::osg::Object const * ) const;
            
            ReaderWriter_exposer.def( 
                "isSameKindAs"
                , isSameKindAs_function_type(&::osgDB::ReaderWriter::isSameKindAs)
                , default_isSameKindAs_function_type(&ReaderWriter_wrapper::default_isSameKindAs)
                , ( bp::arg("obj") ) );
        
        }
        { //::osgDB::ReaderWriter::libraryName
        
            typedef char const * ( ::osgDB::ReaderWriter::*libraryName_function_type )(  ) const;
            typedef char const * ( ReaderWriter_wrapper::*default_libraryName_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "libraryName"
                , libraryName_function_type(&::osgDB::ReaderWriter::libraryName)
                , default_libraryName_function_type(&ReaderWriter_wrapper::default_libraryName) );
        
        }
        { //::osgDB::ReaderWriter::openArchive
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*openArchive_function_type )( ::std::string const &,::osgDB::ReaderWriter::ArchiveStatus,unsigned int,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_openArchive_function_type )( ::std::string const &,::osgDB::ReaderWriter::ArchiveStatus,unsigned int,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "openArchive"
                , openArchive_function_type(&::osgDB::ReaderWriter::openArchive)
                , default_openArchive_function_type(&ReaderWriter_wrapper::default_openArchive)
                , ( bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=(unsigned int)(4096), bp::arg("arg3")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::openArchive
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*openArchive_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_openArchive_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "openArchive"
                , openArchive_function_type(&::osgDB::ReaderWriter::openArchive)
                , default_openArchive_function_type(&ReaderWriter_wrapper::default_openArchive)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readHeightField
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readHeightField_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readHeightField_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readHeightField"
                , readHeightField_function_type(&::osgDB::ReaderWriter::readHeightField)
                , default_readHeightField_function_type(&ReaderWriter_wrapper::default_readHeightField)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readHeightField
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readHeightField_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readHeightField_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readHeightField"
                , readHeightField_function_type(&::osgDB::ReaderWriter::readHeightField)
                , default_readHeightField_function_type(&ReaderWriter_wrapper::default_readHeightField)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readImage
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readImage_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readImage_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readImage"
                , readImage_function_type(&::osgDB::ReaderWriter::readImage)
                , default_readImage_function_type(&ReaderWriter_wrapper::default_readImage)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readImage
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readImage_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readImage_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readImage"
                , readImage_function_type(&::osgDB::ReaderWriter::readImage)
                , default_readImage_function_type(&ReaderWriter_wrapper::default_readImage)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readNode
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readNode_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readNode_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readNode"
                , readNode_function_type(&::osgDB::ReaderWriter::readNode)
                , default_readNode_function_type(&ReaderWriter_wrapper::default_readNode)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readNode
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readNode_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readNode_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readNode"
                , readNode_function_type(&::osgDB::ReaderWriter::readNode)
                , default_readNode_function_type(&ReaderWriter_wrapper::default_readNode)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readObject
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readObject_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readObject_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readObject"
                , readObject_function_type(&::osgDB::ReaderWriter::readObject)
                , default_readObject_function_type(&ReaderWriter_wrapper::default_readObject)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readObject
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readObject_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readObject_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readObject"
                , readObject_function_type(&::osgDB::ReaderWriter::readObject)
                , default_readObject_function_type(&ReaderWriter_wrapper::default_readObject)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readShader
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readShader_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readShader_function_type )( ::std::string const &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readShader"
                , readShader_function_type(&::osgDB::ReaderWriter::readShader)
                , default_readShader_function_type(&ReaderWriter_wrapper::default_readShader)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::readShader
        
            typedef ::osgDB::ReaderWriter::ReadResult ( ::osgDB::ReaderWriter::*readShader_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            typedef ::osgDB::ReaderWriter::ReadResult ( ReaderWriter_wrapper::*default_readShader_function_type )( ::std::istream &,::osgDB::Options const * ) const;
            
            ReaderWriter_exposer.def( 
                "readShader"
                , readShader_function_type(&::osgDB::ReaderWriter::readShader)
                , default_readShader_function_type(&ReaderWriter_wrapper::default_readShader)
                , ( bp::arg("arg0"), bp::arg("arg1")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::supportedExtensions
        
            typedef ::std::map< std::string, std::string > const & ( ::osgDB::ReaderWriter::*supportedExtensions_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "supportedExtensions"
                , supportedExtensions_function_type(&::osgDB::ReaderWriter::supportedExtensions)
                , bp::return_internal_reference< >() );
        
        }
        { //::osgDB::ReaderWriter::supportedFeatures
        
            typedef ::osgDB::ReaderWriter::Features ( ::osgDB::ReaderWriter::*supportedFeatures_function_type )(  ) const;
            typedef ::osgDB::ReaderWriter::Features ( ReaderWriter_wrapper::*default_supportedFeatures_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "supportedFeatures"
                , supportedFeatures_function_type(&::osgDB::ReaderWriter::supportedFeatures)
                , default_supportedFeatures_function_type(&ReaderWriter_wrapper::default_supportedFeatures) );
        
        }
        { //::osgDB::ReaderWriter::supportedOptions
        
            typedef ::std::map< std::string, std::string > const & ( ::osgDB::ReaderWriter::*supportedOptions_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "supportedOptions"
                , supportedOptions_function_type(&::osgDB::ReaderWriter::supportedOptions)
                , bp::return_internal_reference< >() );
        
        }
        { //::osgDB::ReaderWriter::supportedProtocols
        
            typedef ::std::map< std::string, std::string > const & ( ::osgDB::ReaderWriter::*supportedProtocols_function_type )(  ) const;
            
            ReaderWriter_exposer.def( 
                "supportedProtocols"
                , supportedProtocols_function_type(&::osgDB::ReaderWriter::supportedProtocols)
                , bp::return_internal_reference< >() );
        
        }
        { //::osgDB::ReaderWriter::supportsExtension
        
            typedef void ( ::osgDB::ReaderWriter::*supportsExtension_function_type )( ::std::string const &,::std::string const & ) ;
            
            ReaderWriter_exposer.def( 
                "supportsExtension"
                , supportsExtension_function_type( &::osgDB::ReaderWriter::supportsExtension )
                , ( bp::arg("ext"), bp::arg("description") ) );
        
        }
        { //::osgDB::ReaderWriter::supportsOption
        
            typedef void ( ::osgDB::ReaderWriter::*supportsOption_function_type )( ::std::string const &,::std::string const & ) ;
            
            ReaderWriter_exposer.def( 
                "supportsOption"
                , supportsOption_function_type( &::osgDB::ReaderWriter::supportsOption )
                , ( bp::arg("opt"), bp::arg("description") ) );
        
        }
        { //::osgDB::ReaderWriter::supportsProtocol
        
            typedef void ( ::osgDB::ReaderWriter::*supportsProtocol_function_type )( ::std::string const &,::std::string const & ) ;
            
            ReaderWriter_exposer.def( 
                "supportsProtocol"
                , supportsProtocol_function_type( &::osgDB::ReaderWriter::supportsProtocol )
                , ( bp::arg("fmt"), bp::arg("description") ) );
        
        }
        { //::osgDB::ReaderWriter::writeHeightField
        
            typedef boost::python::object ( *default_writeHeightField_function_type )( ::osgDB::ReaderWriter const &,::osg::HeightField &,::std::string const &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeHeightField"
                , default_writeHeightField_function_type( &ReaderWriter_wrapper::default_writeHeightField_492ba9227016a7cdc011f560ee63846b )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeHeightField
        
            typedef boost::python::object ( *default_writeHeightField_function_type )( ::osgDB::ReaderWriter const &,::osg::HeightField &,::std::ostream &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeHeightField"
                , default_writeHeightField_function_type( &ReaderWriter_wrapper::default_writeHeightField_9396c211b31e432102458b3f4acc5b01 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeImage
        
            typedef boost::python::object ( *default_writeImage_function_type )( ::osgDB::ReaderWriter const &,::osg::Image &,::std::string const &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeImage"
                , default_writeImage_function_type( &ReaderWriter_wrapper::default_writeImage_48409f166d256ec2a1ce1aba7ba91b41 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeImage
        
            typedef boost::python::object ( *default_writeImage_function_type )( ::osgDB::ReaderWriter const &,::osg::Image &,::std::ostream &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeImage"
                , default_writeImage_function_type( &ReaderWriter_wrapper::default_writeImage_09e0c822c73aac048a8706dbb950438f )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeNode
        
            typedef boost::python::object ( *default_writeNode_function_type )( ::osgDB::ReaderWriter const &,::osg::Node &,::std::string const &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeNode"
                , default_writeNode_function_type( &ReaderWriter_wrapper::default_writeNode_94ab5d58c5431145dd0b29259e29a1e0 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeNode
        
            typedef boost::python::object ( *default_writeNode_function_type )( ::osgDB::ReaderWriter const &,::osg::Node &,::std::ostream &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeNode"
                , default_writeNode_function_type( &ReaderWriter_wrapper::default_writeNode_85ada25f9394d5ca11dce46130e109e3 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeObject
        
            typedef boost::python::object ( *default_writeObject_function_type )( ::osgDB::ReaderWriter const &,::osg::Object &,::std::string const &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeObject"
                , default_writeObject_function_type( &ReaderWriter_wrapper::default_writeObject_4b217c12bc66236059a76e176772f392 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeObject
        
            typedef boost::python::object ( *default_writeObject_function_type )( ::osgDB::ReaderWriter const &,::osg::Object &,::std::ostream &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeObject"
                , default_writeObject_function_type( &ReaderWriter_wrapper::default_writeObject_86a17357be0e1c05716ddbecef039a10 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeShader
        
            typedef boost::python::object ( *default_writeShader_function_type )( ::osgDB::ReaderWriter const &,::osg::Shader &,::std::string const &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeShader"
                , default_writeShader_function_type( &ReaderWriter_wrapper::default_writeShader_be57249f6a6e741afc4665bd121f54f9 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        { //::osgDB::ReaderWriter::writeShader
        
            typedef boost::python::object ( *default_writeShader_function_type )( ::osgDB::ReaderWriter const &,::osg::Shader &,::std::ostream &,::osgDB::Options const * );
            
            ReaderWriter_exposer.def( 
                "writeShader"
                , default_writeShader_function_type( &ReaderWriter_wrapper::default_writeShader_88038c79c30b9deaaaed55931fcd9f34 )
                , ( bp::arg("inst"), bp::arg("arg0"), bp::arg("arg1"), bp::arg("arg2")=0l ) );
        
        }
        ReaderWriter_exposer.staticmethod( "featureAsString" );
    }

}
