// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgDB.h"
#include "wrap_referenced.h"
#include "InputIterator.pypp.hpp"

namespace bp = boost::python;

struct InputIterator_wrapper : osgDB::InputIterator, bp::wrapper< osgDB::InputIterator > {

    virtual void advanceToCurrentEndBracket(  ) {
        if( bp::override func_advanceToCurrentEndBracket = this->get_override( "advanceToCurrentEndBracket" ) )
            func_advanceToCurrentEndBracket(  );
        else{
            this->osgDB::InputIterator::advanceToCurrentEndBracket(  );
        }
    }
    
    void default_advanceToCurrentEndBracket(  ) {
        osgDB::InputIterator::advanceToCurrentEndBracket( );
    }

    virtual bool isBinary(  ) const {
        bp::override func_isBinary = this->get_override( "isBinary" );
        return func_isBinary(  );
    }

    virtual bool matchString( ::std::string const & arg0 ) {
        if( bp::override func_matchString = this->get_override( "matchString" ) )
            return func_matchString( arg0 );
        else{
            return this->osgDB::InputIterator::matchString( arg0 );
        }
    }
    
    bool default_matchString( ::std::string const & arg0 ) {
        return osgDB::InputIterator::matchString( arg0 );
    }

    virtual void readBool( bool & b ){
        bp::override func_readBool = this->get_override( "readBool" );
        func_readBool( b );
    }

    virtual void readChar( char & c ){
        bp::override func_readChar = this->get_override( "readChar" );
        func_readChar( c );
    }

    virtual void readCharArray( char * s, unsigned int size ){
        bp::override func_readCharArray = this->get_override( "readCharArray" );
        func_readCharArray( s, size );
    }

    virtual void readDouble( double & d ){
        bp::override func_readDouble = this->get_override( "readDouble" );
        func_readDouble( d );
    }

    virtual void readFloat( float & f ){
        bp::override func_readFloat = this->get_override( "readFloat" );
        func_readFloat( f );
    }

    virtual void readGLenum( ::osgDB::ObjectGLenum & value ){
        bp::override func_readGLenum = this->get_override( "readGLenum" );
        func_readGLenum( boost::ref(value) );
    }

    virtual void readInt( int & i ){
        bp::override func_readInt = this->get_override( "readInt" );
        func_readInt( i );
    }

    virtual void readLong( long int & l ){
        bp::override func_readLong = this->get_override( "readLong" );
        func_readLong( l );
    }

    virtual void readMark( ::osgDB::ObjectMark & mark ){
        bp::override func_readMark = this->get_override( "readMark" );
        func_readMark( boost::ref(mark) );
    }

    virtual void readProperty( ::osgDB::ObjectProperty & prop ){
        bp::override func_readProperty = this->get_override( "readProperty" );
        func_readProperty( boost::ref(prop) );
    }

    virtual void readSChar( signed char & c ){
        bp::override func_readSChar = this->get_override( "readSChar" );
        func_readSChar( c );
    }

    virtual void readShort( short int & s ){
        bp::override func_readShort = this->get_override( "readShort" );
        func_readShort( s );
    }

    virtual void readString( ::std::string & s ){
        bp::override func_readString = this->get_override( "readString" );
        func_readString( s );
    }

    virtual void readUChar( unsigned char & c ){
        bp::override func_readUChar = this->get_override( "readUChar" );
        func_readUChar( c );
    }

    virtual void readUInt( unsigned int & i ){
        bp::override func_readUInt = this->get_override( "readUInt" );
        func_readUInt( i );
    }

    virtual void readULong( long unsigned int & l ){
        bp::override func_readULong = this->get_override( "readULong" );
        func_readULong( l );
    }

    virtual void readUShort( short unsigned int & s ){
        bp::override func_readUShort = this->get_override( "readUShort" );
        func_readUShort( s );
    }

    virtual void readWrappedString( ::std::string & str ){
        bp::override func_readWrappedString = this->get_override( "readWrappedString" );
        func_readWrappedString( str );
    }

};

void register_InputIterator_class(){

    bp::class_< InputIterator_wrapper, bp::bases< ::osg::Referenced >, osg::ref_ptr< InputIterator_wrapper >, boost::noncopyable >( "InputIterator", bp::no_init )    
        .def( 
            "advanceToCurrentEndBracket"
            , (void ( ::osgDB::InputIterator::* )(  ) )(&::osgDB::InputIterator::advanceToCurrentEndBracket)
            , (void ( InputIterator_wrapper::* )(  ) )(&InputIterator_wrapper::default_advanceToCurrentEndBracket) )    
        .def( 
            "checkStream"
            , (void ( ::osgDB::InputIterator::* )(  ) const)( &::osgDB::InputIterator::checkStream ) )    
        .def( 
            "getByteSwap"
            , (int ( ::osgDB::InputIterator::* )(  ) const)( &::osgDB::InputIterator::getByteSwap ) )    
        .def( 
            "getInputStream"
            , (::osgDB::InputStream * ( ::osgDB::InputIterator::* )(  ) )( &::osgDB::InputIterator::getInputStream )
            , bp::return_internal_reference< >() )    
        .def( 
            "getInputStream"
            , (::osgDB::InputStream const * ( ::osgDB::InputIterator::* )(  ) const)( &::osgDB::InputIterator::getInputStream )
            , bp::return_internal_reference< >() )    
        .def( 
            "getStream"
            , (::std::istream * ( ::osgDB::InputIterator::* )(  ) )( &::osgDB::InputIterator::getStream )
            , bp::return_internal_reference< >() )    
        .def( 
            "getStream"
            , (::std::istream const * ( ::osgDB::InputIterator::* )(  ) const)( &::osgDB::InputIterator::getStream )
            , bp::return_internal_reference< >() )    
        .def( 
            "getSupportBinaryBrackets"
            , (bool ( ::osgDB::InputIterator::* )(  ) const)( &::osgDB::InputIterator::getSupportBinaryBrackets ) )    
        .def( 
            "isBinary"
            , bp::pure_virtual( (bool ( ::osgDB::InputIterator::* )(  ) const)(&::osgDB::InputIterator::isBinary) ) )    
        .def( 
            "isFailed"
            , (bool ( ::osgDB::InputIterator::* )(  ) const)( &::osgDB::InputIterator::isFailed ) )    
        .def( 
            "matchString"
            , (bool ( ::osgDB::InputIterator::* )( ::std::string const & ) )(&::osgDB::InputIterator::matchString)
            , (bool ( InputIterator_wrapper::* )( ::std::string const & ) )(&InputIterator_wrapper::default_matchString)
            , ( bp::arg("arg0") ) )    
        .def( 
            "readBool"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( bool & ) )(&::osgDB::InputIterator::readBool) )
            , ( bp::arg("b") ) )    
        .def( 
            "readChar"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( char & ) )(&::osgDB::InputIterator::readChar) )
            , ( bp::arg("c") ) )    
        .def( 
            "readCharArray"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( char *,unsigned int ) )(&::osgDB::InputIterator::readCharArray) )
            , ( bp::arg("s"), bp::arg("size") ) )    
        .def( 
            "readComponentArray"
            , (void ( ::osgDB::InputIterator::* )( char *,unsigned int,unsigned int,unsigned int ) )( &::osgDB::InputIterator::readComponentArray )
            , ( bp::arg("s"), bp::arg("numElements"), bp::arg("numComponentsPerElements"), bp::arg("componentSizeInBytes") ) )    
        .def( 
            "readDouble"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( double & ) )(&::osgDB::InputIterator::readDouble) )
            , ( bp::arg("d") ) )    
        .def( 
            "readFloat"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( float & ) )(&::osgDB::InputIterator::readFloat) )
            , ( bp::arg("f") ) )    
        .def( 
            "readGLenum"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( ::osgDB::ObjectGLenum & ) )(&::osgDB::InputIterator::readGLenum) )
            , ( bp::arg("value") ) )    
        .def( 
            "readInt"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( int & ) )(&::osgDB::InputIterator::readInt) )
            , ( bp::arg("i") ) )    
        .def( 
            "readLong"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( long int & ) )(&::osgDB::InputIterator::readLong) )
            , ( bp::arg("l") ) )    
        .def( 
            "readMark"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( ::osgDB::ObjectMark & ) )(&::osgDB::InputIterator::readMark) )
            , ( bp::arg("mark") ) )    
        .def( 
            "readProperty"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( ::osgDB::ObjectProperty & ) )(&::osgDB::InputIterator::readProperty) )
            , ( bp::arg("prop") ) )    
        .def( 
            "readSChar"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( signed char & ) )(&::osgDB::InputIterator::readSChar) )
            , ( bp::arg("c") ) )    
        .def( 
            "readShort"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( short int & ) )(&::osgDB::InputIterator::readShort) )
            , ( bp::arg("s") ) )    
        .def( 
            "readString"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( ::std::string & ) )(&::osgDB::InputIterator::readString) )
            , ( bp::arg("s") ) )    
        .def( 
            "readUChar"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( unsigned char & ) )(&::osgDB::InputIterator::readUChar) )
            , ( bp::arg("c") ) )    
        .def( 
            "readUInt"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( unsigned int & ) )(&::osgDB::InputIterator::readUInt) )
            , ( bp::arg("i") ) )    
        .def( 
            "readULong"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( long unsigned int & ) )(&::osgDB::InputIterator::readULong) )
            , ( bp::arg("l") ) )    
        .def( 
            "readUShort"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( short unsigned int & ) )(&::osgDB::InputIterator::readUShort) )
            , ( bp::arg("s") ) )    
        .def( 
            "readWrappedString"
            , bp::pure_virtual( (void ( ::osgDB::InputIterator::* )( ::std::string & ) )(&::osgDB::InputIterator::readWrappedString) )
            , ( bp::arg("str") ) )    
        .def( 
            "setByteSwap"
            , (void ( ::osgDB::InputIterator::* )( int ) )( &::osgDB::InputIterator::setByteSwap )
            , ( bp::arg("byteSwap") ) )    
        .def( 
            "setInputStream"
            , (void ( ::osgDB::InputIterator::* )( ::osgDB::InputStream * ) )( &::osgDB::InputIterator::setInputStream )
            , ( bp::arg("inputStream") ) )    
        .def( 
            "setStream"
            , (void ( ::osgDB::InputIterator::* )( ::std::istream * ) )( &::osgDB::InputIterator::setStream )
            , ( bp::arg("istream") ) )    
        .def( 
            "setSupportBinaryBrackets"
            , (void ( ::osgDB::InputIterator::* )( bool ) )( &::osgDB::InputIterator::setSupportBinaryBrackets )
            , ( bp::arg("b") ) )    
        .def( 
            "throwException"
            , (void ( ::osgDB::InputIterator::* )( ::std::string const & ) )( &::osgDB::InputIterator::throwException )
            , ( bp::arg("msg") ) );

}
