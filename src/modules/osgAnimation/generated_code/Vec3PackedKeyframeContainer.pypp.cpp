// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgAnimation.h"
#include "wrap_referenced.h"
#include "Vec3PackedKeyframeContainer.pypp.hpp"

namespace bp = boost::python;

struct TemplateKeyframeContainer_less__osgAnimation_scope_Vec3Packed__greater__wrapper : osgAnimation::TemplateKeyframeContainer< osgAnimation::Vec3Packed >, bp::wrapper< osgAnimation::TemplateKeyframeContainer< osgAnimation::Vec3Packed > > {

    virtual unsigned int size(  ) const {
        bp::override func_size = this->get_override( "size" );
        return func_size(  );
    }

};

void register_Vec3PackedKeyframeContainer_class(){

    bp::class_< TemplateKeyframeContainer_less__osgAnimation_scope_Vec3Packed__greater__wrapper, bp::bases< osgAnimation::KeyframeContainer >, osg::ref_ptr< TemplateKeyframeContainer_less__osgAnimation_scope_Vec3Packed__greater__wrapper >, boost::noncopyable >( "Vec3PackedKeyframeContainer", bp::no_init )    
        .def( 
            "getKeyframeType"
            , (char const * ( ::osgAnimation::TemplateKeyframeContainer<osgAnimation::Vec3Packed>::* )(  ) )( &::osgAnimation::TemplateKeyframeContainer< osgAnimation::Vec3Packed >::getKeyframeType ) )    
        .def( 
            "init"
            , (void ( ::osgAnimation::TemplateKeyframeContainer<osgAnimation::Vec3Packed>::* )( ::osg::Vec3f const &,::osg::Vec3f const & ) )( &::osgAnimation::TemplateKeyframeContainer< osgAnimation::Vec3Packed >::init )
            , ( bp::arg("min"), bp::arg("scale") ) )    
        .def_readwrite( "_min", &osgAnimation::TemplateKeyframeContainer< osgAnimation::Vec3Packed >::_min )    
        .def_readwrite( "_scale", &osgAnimation::TemplateKeyframeContainer< osgAnimation::Vec3Packed >::_scale )    
        .def( 
            "size"
            , bp::pure_virtual( (unsigned int ( ::osgAnimation::KeyframeContainer::* )(  ) const)(&::osgAnimation::KeyframeContainer::size) ) );

}
