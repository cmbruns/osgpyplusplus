// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgWidget.h"
#include "wrap_referenced.h"
#include "CallbackInterface.pypp.hpp"

namespace bp = boost::python;

struct CallbackInterface_wrapper : osgWidget::CallbackInterface, bp::wrapper< osgWidget::CallbackInterface > {

    CallbackInterface_wrapper()
    : osgWidget::CallbackInterface()
      , bp::wrapper< osgWidget::CallbackInterface >(){
        // null constructor
        
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osgWidget::CallbackInterface::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osgWidget::CallbackInterface::className( );
    }

    virtual bool operator()( ::osgWidget::Event & arg0 ){
        bp::override func___call__ = this->get_override( "__call__" );
        return func___call__( boost::ref(arg0) );
    }

};

void register_CallbackInterface_class(){

    bp::class_< CallbackInterface_wrapper, bp::bases< ::osg::Referenced >, osg::ref_ptr< CallbackInterface_wrapper >, boost::noncopyable >( "CallbackInterface", bp::no_init )    
        .def( 
            "className"
            , (char const * ( ::osgWidget::CallbackInterface::* )(  ) const)(&::osgWidget::CallbackInterface::className)
            , (char const * ( CallbackInterface_wrapper::* )(  ) const)(&CallbackInterface_wrapper::default_className) )    
        .def( 
            "__call__"
            , bp::pure_virtual( (bool ( ::osgWidget::CallbackInterface::* )( ::osgWidget::Event & ) )(&::osgWidget::CallbackInterface::operator()) )
            , ( bp::arg("arg0") ) );

}
