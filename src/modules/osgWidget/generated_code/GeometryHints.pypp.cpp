// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgWidget.h"
#include "GeometryHints.pypp.hpp"

namespace bp = boost::python;

void register_GeometryHints_class(){

    { //::osgWidget::GeometryHints
        typedef bp::class_< osgWidget::GeometryHints > GeometryHints_exposer_t;
        GeometryHints_exposer_t GeometryHints_exposer = GeometryHints_exposer_t( "GeometryHints", "\n Hints structure that can be passed to PdfReader and VncClient classes to help guide them on what geometry to build.\n", bp::init< >() );
        bp::scope GeometryHints_scope( GeometryHints_exposer );
        bp::enum_< osgWidget::GeometryHints::AspectRatioPolicy>("AspectRatioPolicy")
            .value("RESIZE_HEIGHT_TO_MAINTAINCE_ASPECT_RATIO", osgWidget::GeometryHints::RESIZE_HEIGHT_TO_MAINTAINCE_ASPECT_RATIO)
            .value("RESIZE_WIDTH_TO_MAINTAINCE_ASPECT_RATIO", osgWidget::GeometryHints::RESIZE_WIDTH_TO_MAINTAINCE_ASPECT_RATIO)
            .value("IGNORE_DOCUMENT_ASPECT_RATIO", osgWidget::GeometryHints::IGNORE_DOCUMENT_ASPECT_RATIO)
            .export_values()
            ;
        GeometryHints_exposer.def( bp::init< osg::Vec3 const &, osg::Vec3 const &, osg::Vec3 const &, osg::Vec4 const &, bp::optional< osgWidget::GeometryHints::AspectRatioPolicy, unsigned int, unsigned int > >(( bp::arg("pos"), bp::arg("wVec"), bp::arg("hVec"), bp::arg("bColor"), bp::arg("asp")=(long)(::osgWidget::GeometryHints::RESIZE_HEIGHT_TO_MAINTAINCE_ASPECT_RATIO), bp::arg("wRes")=(unsigned int)(1024), bp::arg("hRes")=(unsigned int)(1024) )) );
        GeometryHints_exposer.def_readwrite( "aspectRatioPolicy", &osgWidget::GeometryHints::aspectRatioPolicy );
        GeometryHints_exposer.def_readwrite( "backgroundColor", &osgWidget::GeometryHints::backgroundColor );
        GeometryHints_exposer.def_readwrite( "heightResolution", &osgWidget::GeometryHints::heightResolution );
        GeometryHints_exposer.def_readwrite( "heightVec", &osgWidget::GeometryHints::heightVec );
        GeometryHints_exposer.def_readwrite( "position", &osgWidget::GeometryHints::position );
        GeometryHints_exposer.def_readwrite( "widthResolution", &osgWidget::GeometryHints::widthResolution );
        GeometryHints_exposer.def_readwrite( "widthVec", &osgWidget::GeometryHints::widthVec );
    }

}
