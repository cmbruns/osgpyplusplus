// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgManipulator.h"
#include "_osgManipulator_free_functions.pypp.hpp"

namespace bp = boost::python;

void register_free_functions(){

    { //::osgManipulator::computeNodePathToRoot
    
        typedef void ( *computeNodePathToRoot_function_type )( ::osg::Node &,::osg::NodePath & );
        
        bp::def( 
            "computeNodePathToRoot"
            , computeNodePathToRoot_function_type( &::osgManipulator::computeNodePathToRoot )
            , ( bp::arg("node"), bp::arg("np") )
            , " Computes the nodepath from the given node all the way upto the root." );
    
    }

    { //::osgManipulatorGetLibraryName
    
        typedef char const * ( *osgManipulatorGetLibraryName_function_type )(  );
        
        bp::def( 
            "osgManipulatorGetLibraryName"
            , osgManipulatorGetLibraryName_function_type( &::osgManipulatorGetLibraryName )
            , " osgManipulatorGetLibraryName() returns the library name in human friendly form." );
    
    }

    { //::osgManipulatorGetVersion
    
        typedef char const * ( *osgManipulatorGetVersion_function_type )(  );
        
        bp::def( 
            "osgManipulatorGetVersion"
            , osgManipulatorGetVersion_function_type( &::osgManipulatorGetVersion )
            , " osgManipulatorGetVersion() returns the library version number.\n Numbering convention : OpenSceneGraph-1.0 will return 1.0 from osgManipulatorGetVersion.\n\n This C function can be also used to check for the existence of the OpenSceneGraph\n library using autoconf and its m4 macro AC_CHECK_LIB.\n\n Here is the code to add to your configure.in:\n Verbatim:\n #\n # Check for the OpenSceneGraph (OSG) Manipulator library\n #\n AC_CHECK_LIB(osg, osgManipulatorGetVersion, ,\n    [AC_MSG_ERROR(OpenSceneGraph Manipulator library not found. See http://www.openscenegraph.org)],)\n E:ndverbatim" );
    
    }

    { //::osgManipulator::setDrawableToAlwaysCull
    
        typedef void ( *setDrawableToAlwaysCull_function_type )( ::osg::Drawable & );
        
        bp::def( 
            "setDrawableToAlwaysCull"
            , setDrawableToAlwaysCull_function_type( &::osgManipulator::setDrawableToAlwaysCull )
            , ( bp::arg("drawable") )
            , " Culls the drawable all the time. Used by draggers to have invisible geometry\n around lines and points so that they can be picked. For example, a dragger\n could have a line with an invisible cylinder around it to enable picking on\n that line." );
    
    }

    { //::osgManipulator::setMaterialColor
    
        typedef void ( *setMaterialColor_function_type )( ::osg::Vec4 const &,::osg::Node & );
        
        bp::def( 
            "setMaterialColor"
            , setMaterialColor_function_type( &::osgManipulator::setMaterialColor )
            , ( bp::arg("color"), bp::arg("node") )
            , " Convenience function for setting the material color on a node." );
    
    }

}
