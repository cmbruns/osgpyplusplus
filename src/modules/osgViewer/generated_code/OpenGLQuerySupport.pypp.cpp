// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgViewer.h"
#include "wrap_referenced.h"
#include "OpenGLQuerySupport.pypp.hpp"

namespace bp = boost::python;

struct OpenGLQuerySupport_wrapper : osgViewer::OpenGLQuerySupport, bp::wrapper< osgViewer::OpenGLQuerySupport > {

    virtual void beginQuery( unsigned int frameNumber, ::osg::State * state ){
        bp::override func_beginQuery = this->get_override( "beginQuery" );
        func_beginQuery( frameNumber, boost::python::ptr(state) );
    }

    virtual void checkQuery( ::osg::Stats * stats, ::osg::State * state, ::osg::Timer_t startTick ){
        bp::override func_checkQuery = this->get_override( "checkQuery" );
        func_checkQuery( boost::python::ptr(stats), boost::python::ptr(state), startTick );
    }

    virtual void endQuery( ::osg::State * state ){
        bp::override func_endQuery = this->get_override( "endQuery" );
        func_endQuery( boost::python::ptr(state) );
    }

    virtual void initialize( ::osg::State * state, ::osg::Timer_t startTick ) {
        if( bp::override func_initialize = this->get_override( "initialize" ) )
            func_initialize( boost::python::ptr(state), startTick );
        else{
            this->osgViewer::OpenGLQuerySupport::initialize( boost::python::ptr(state), startTick );
        }
    }
    
    void default_initialize( ::osg::State * state, ::osg::Timer_t startTick ) {
        osgViewer::OpenGLQuerySupport::initialize( boost::python::ptr(state), startTick );
    }

};

void register_OpenGLQuerySupport_class(){

    bp::class_< OpenGLQuerySupport_wrapper, bp::bases< ::osg::Referenced >, osg::ref_ptr< OpenGLQuerySupport_wrapper >, boost::noncopyable >( "OpenGLQuerySupport", bp::no_init )    
        .def( 
            "beginQuery"
            , bp::pure_virtual( (void ( ::osgViewer::OpenGLQuerySupport::* )( unsigned int,::osg::State * ) )(&::osgViewer::OpenGLQuerySupport::beginQuery) )
            , ( bp::arg("frameNumber"), bp::arg("state") ) )    
        .def( 
            "checkQuery"
            , bp::pure_virtual( (void ( ::osgViewer::OpenGLQuerySupport::* )( ::osg::Stats *,::osg::State *,::osg::Timer_t ) )(&::osgViewer::OpenGLQuerySupport::checkQuery) )
            , ( bp::arg("stats"), bp::arg("state"), bp::arg("startTick") ) )    
        .def( 
            "endQuery"
            , bp::pure_virtual( (void ( ::osgViewer::OpenGLQuerySupport::* )( ::osg::State * ) )(&::osgViewer::OpenGLQuerySupport::endQuery) )
            , ( bp::arg("state") ) )    
        .def( 
            "initialize"
            , (void ( ::osgViewer::OpenGLQuerySupport::* )( ::osg::State *,::osg::Timer_t ) )(&::osgViewer::OpenGLQuerySupport::initialize)
            , (void ( OpenGLQuerySupport_wrapper::* )( ::osg::State *,::osg::Timer_t ) )(&OpenGLQuerySupport_wrapper::default_initialize)
            , ( bp::arg("state"), bp::arg("startTick") ) );

}
