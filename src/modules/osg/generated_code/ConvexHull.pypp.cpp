// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "ConvexHull.pypp.hpp"

namespace bp = boost::python;

struct ConvexHull_wrapper : osg::ConvexHull, bp::wrapper< osg::ConvexHull > {

    ConvexHull_wrapper( )
    : osg::ConvexHull( )
      , bp::wrapper< osg::ConvexHull >(){
        // null constructor
    
    }

    virtual void accept( ::osg::ShapeVisitor & sv ) {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(sv) );
        else{
            this->osg::ConvexHull::accept( boost::ref(sv) );
        }
    }
    
    void default_accept( ::osg::ShapeVisitor & sv ) {
        osg::ConvexHull::accept( boost::ref(sv) );
    }

    virtual void accept( ::osg::ConstShapeVisitor & csv ) const  {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(csv) );
        else{
            this->osg::ConvexHull::accept( boost::ref(csv) );
        }
    }
    
    void default_accept( ::osg::ConstShapeVisitor & csv ) const  {
        osg::ConvexHull::accept( boost::ref(csv) );
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osg::ConvexHull::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osg::ConvexHull::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osg::ConvexHull::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osg::ConvexHull::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osg::ConvexHull::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osg::ConvexHull::cloneType( );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osg::ConvexHull::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osg::ConvexHull::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osg::ConvexHull::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osg::ConvexHull::libraryName( );
    }

};

void register_ConvexHull_class(){

    bp::class_< ConvexHull_wrapper, bp::bases< osg::TriangleMesh >, osg::ref_ptr< ::osg::ConvexHull >, boost::noncopyable >( "ConvexHull", bp::no_init )    
        .def( bp::init< >() )    
        .def( 
            "accept"
            , (void ( ::osg::ConvexHull::* )( ::osg::ShapeVisitor & ) )(&::osg::ConvexHull::accept)
            , (void ( ConvexHull_wrapper::* )( ::osg::ShapeVisitor & ) )(&ConvexHull_wrapper::default_accept)
            , ( bp::arg("sv") ) )    
        .def( 
            "accept"
            , (void ( ::osg::ConvexHull::* )( ::osg::ConstShapeVisitor & ) const)(&::osg::ConvexHull::accept)
            , (void ( ConvexHull_wrapper::* )( ::osg::ConstShapeVisitor & ) const)(&ConvexHull_wrapper::default_accept)
            , ( bp::arg("csv") ) )    
        .def( 
            "className"
            , (char const * ( ::osg::ConvexHull::* )(  ) const)(&::osg::ConvexHull::className)
            , (char const * ( ConvexHull_wrapper::* )(  ) const)(&ConvexHull_wrapper::default_className) )    
        .def( 
            "clone"
            , (::osg::Object * ( ::osg::ConvexHull::* )( ::osg::CopyOp const & ) const)(&::osg::ConvexHull::clone)
            , (::osg::Object * ( ConvexHull_wrapper::* )( ::osg::CopyOp const & ) const)(&ConvexHull_wrapper::default_clone)
            , ( bp::arg("copyop") )
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "cloneType"
            , (::osg::Object * ( ::osg::ConvexHull::* )(  ) const)(&::osg::ConvexHull::cloneType)
            , (::osg::Object * ( ConvexHull_wrapper::* )(  ) const)(&ConvexHull_wrapper::default_cloneType)
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "isSameKindAs"
            , (bool ( ::osg::ConvexHull::* )( ::osg::Object const * ) const)(&::osg::ConvexHull::isSameKindAs)
            , (bool ( ConvexHull_wrapper::* )( ::osg::Object const * ) const)(&ConvexHull_wrapper::default_isSameKindAs)
            , ( bp::arg("obj") ) )    
        .def( 
            "libraryName"
            , (char const * ( ::osg::ConvexHull::* )(  ) const)(&::osg::ConvexHull::libraryName)
            , (char const * ( ConvexHull_wrapper::* )(  ) const)(&ConvexHull_wrapper::default_libraryName) );

}
