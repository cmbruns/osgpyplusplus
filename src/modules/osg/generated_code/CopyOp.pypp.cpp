// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "CopyOp.pypp.hpp"

namespace bp = boost::python;

void register_CopyOp_class(){

    { //::osg::CopyOp
        typedef bp::class_< osg::CopyOp > CopyOp_exposer_t;
        CopyOp_exposer_t CopyOp_exposer = CopyOp_exposer_t( "CopyOp", "\n Copy Op(erator) used to control whether shallow or deep copy is used\n during copy construction and clone operation.\n", bp::init< bp::optional< unsigned int > >(( bp::arg("flags")=(unsigned int)((unsigned int)(::osg::CopyOp::SHALLOW_COPY)) )) );
        bp::scope CopyOp_scope( CopyOp_exposer );
        bp::enum_< osg::CopyOp::Options>("Options")
            .value("SHALLOW_COPY", osg::CopyOp::SHALLOW_COPY)
            .value("DEEP_COPY_OBJECTS", osg::CopyOp::DEEP_COPY_OBJECTS)
            .value("DEEP_COPY_NODES", osg::CopyOp::DEEP_COPY_NODES)
            .value("DEEP_COPY_DRAWABLES", osg::CopyOp::DEEP_COPY_DRAWABLES)
            .value("DEEP_COPY_STATESETS", osg::CopyOp::DEEP_COPY_STATESETS)
            .value("DEEP_COPY_STATEATTRIBUTES", osg::CopyOp::DEEP_COPY_STATEATTRIBUTES)
            .value("DEEP_COPY_TEXTURES", osg::CopyOp::DEEP_COPY_TEXTURES)
            .value("DEEP_COPY_IMAGES", osg::CopyOp::DEEP_COPY_IMAGES)
            .value("DEEP_COPY_ARRAYS", osg::CopyOp::DEEP_COPY_ARRAYS)
            .value("DEEP_COPY_PRIMITIVES", osg::CopyOp::DEEP_COPY_PRIMITIVES)
            .value("DEEP_COPY_SHAPES", osg::CopyOp::DEEP_COPY_SHAPES)
            .value("DEEP_COPY_UNIFORMS", osg::CopyOp::DEEP_COPY_UNIFORMS)
            .value("DEEP_COPY_CALLBACKS", osg::CopyOp::DEEP_COPY_CALLBACKS)
            .value("DEEP_COPY_USERDATA", osg::CopyOp::DEEP_COPY_USERDATA)
            .value("DEEP_COPY_ALL", osg::CopyOp::DEEP_COPY_ALL)
            .export_values()
            ;
        bp::implicitly_convertible< unsigned int, osg::CopyOp >();
        { //::osg::CopyOp::getCopyFlags
        
            typedef unsigned int ( ::osg::CopyOp::*getCopyFlags_function_type )(  ) const;
            
            CopyOp_exposer.def( 
                "getCopyFlags"
                , getCopyFlags_function_type( &::osg::CopyOp::getCopyFlags ) );
        
        }
        { //::osg::CopyOp::setCopyFlags
        
            typedef void ( ::osg::CopyOp::*setCopyFlags_function_type )( unsigned int ) ;
            
            CopyOp_exposer.def( 
                "setCopyFlags"
                , setCopyFlags_function_type( &::osg::CopyOp::setCopyFlags )
                , ( bp::arg("flags") ) );
        
        }
    }

}
