// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "HeightField.pypp.hpp"

namespace bp = boost::python;

struct HeightField_wrapper : osg::HeightField, bp::wrapper< osg::HeightField > {

    HeightField_wrapper( )
    : osg::HeightField( )
      , bp::wrapper< osg::HeightField >(){
        // null constructor
    
    }

    virtual void accept( ::osg::ShapeVisitor & sv ) {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(sv) );
        else{
            this->osg::HeightField::accept( boost::ref(sv) );
        }
    }
    
    void default_accept( ::osg::ShapeVisitor & sv ) {
        osg::HeightField::accept( boost::ref(sv) );
    }

    virtual void accept( ::osg::ConstShapeVisitor & csv ) const  {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(csv) );
        else{
            this->osg::HeightField::accept( boost::ref(csv) );
        }
    }
    
    void default_accept( ::osg::ConstShapeVisitor & csv ) const  {
        osg::HeightField::accept( boost::ref(csv) );
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osg::HeightField::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osg::HeightField::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osg::HeightField::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osg::HeightField::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osg::HeightField::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osg::HeightField::cloneType( );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osg::HeightField::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osg::HeightField::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osg::HeightField::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osg::HeightField::libraryName( );
    }

};

void register_HeightField_class(){

    bp::class_< HeightField_wrapper, bp::bases< osg::Shape >, osg::ref_ptr< ::osg::HeightField >, boost::noncopyable >( "HeightField", bp::no_init )    
        .def( bp::init< >() )    
        .def( 
            "accept"
            , (void ( ::osg::HeightField::* )( ::osg::ShapeVisitor & ) )(&::osg::HeightField::accept)
            , (void ( HeightField_wrapper::* )( ::osg::ShapeVisitor & ) )(&HeightField_wrapper::default_accept)
            , ( bp::arg("sv") ) )    
        .def( 
            "accept"
            , (void ( ::osg::HeightField::* )( ::osg::ConstShapeVisitor & ) const)(&::osg::HeightField::accept)
            , (void ( HeightField_wrapper::* )( ::osg::ConstShapeVisitor & ) const)(&HeightField_wrapper::default_accept)
            , ( bp::arg("csv") ) )    
        .def( 
            "allocate"
            , (void ( ::osg::HeightField::* )( unsigned int,unsigned int ) )( &::osg::HeightField::allocate )
            , ( bp::arg("numColumns"), bp::arg("numRows") ) )    
        .def( 
            "className"
            , (char const * ( ::osg::HeightField::* )(  ) const)(&::osg::HeightField::className)
            , (char const * ( HeightField_wrapper::* )(  ) const)(&HeightField_wrapper::default_className) )    
        .def( 
            "clone"
            , (::osg::Object * ( ::osg::HeightField::* )( ::osg::CopyOp const & ) const)(&::osg::HeightField::clone)
            , (::osg::Object * ( HeightField_wrapper::* )( ::osg::CopyOp const & ) const)(&HeightField_wrapper::default_clone)
            , ( bp::arg("copyop") )
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "cloneType"
            , (::osg::Object * ( ::osg::HeightField::* )(  ) const)(&::osg::HeightField::cloneType)
            , (::osg::Object * ( HeightField_wrapper::* )(  ) const)(&HeightField_wrapper::default_cloneType)
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "computeRotationMatrix"
            , (::osg::Matrix ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::computeRotationMatrix ) )    
        .def( 
            "getBorderWidth"
            , (unsigned int ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getBorderWidth )
            , " Get the width in number of cells in from the edge that the height field should be rendered from." )    
        .def( 
            "getFloatArray"
            , (::osg::FloatArray * ( ::osg::HeightField::* )(  ) )( &::osg::HeightField::getFloatArray )
            , bp::return_internal_reference< >()
            , " Get the FloatArray height data." )    
        .def( 
            "getFloatArray"
            , (::osg::FloatArray const * ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getFloatArray )
            , bp::return_internal_reference< >()
            , " Get the const FloatArray height data." )    
        .def( 
            "getHeight"
            , (float & ( ::osg::HeightField::* )( unsigned int,unsigned int ) )( &::osg::HeightField::getHeight )
            , ( bp::arg("c"), bp::arg("r") )
            , bp::return_value_policy< bp::copy_non_const_reference >() )    
        .def( 
            "getHeight"
            , (float ( ::osg::HeightField::* )( unsigned int,unsigned int ) const)( &::osg::HeightField::getHeight )
            , ( bp::arg("c"), bp::arg("r") ) )    
        .def( 
            "getHeightDelta"
            , (::osg::Vec2 ( ::osg::HeightField::* )( unsigned int,unsigned int ) const)( &::osg::HeightField::getHeightDelta )
            , ( bp::arg("c"), bp::arg("r") ) )    
        .def( 
            "getHeightList"
            , (::std::vector< float > & ( ::osg::HeightField::* )(  ) )( &::osg::HeightField::getHeightList )
            , bp::return_internal_reference< >() )    
        .def( 
            "getHeightList"
            , (::std::vector< float > const & ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getHeightList )
            , bp::return_internal_reference< >() )    
        .def( 
            "getNormal"
            , (::osg::Vec3 ( ::osg::HeightField::* )( unsigned int,unsigned int ) const)( &::osg::HeightField::getNormal )
            , ( bp::arg("c"), bp::arg("r") ) )    
        .def( 
            "getNumColumns"
            , (unsigned int ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getNumColumns ) )    
        .def( 
            "getNumRows"
            , (unsigned int ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getNumRows ) )    
        .def( 
            "getOrigin"
            , (::osg::Vec3 const & ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getOrigin )
            , bp::return_internal_reference< >() )    
        .def( 
            "getRotation"
            , (::osg::Quat const & ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getRotation )
            , bp::return_internal_reference< >() )    
        .def( 
            "getSkirtHeight"
            , (float ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getSkirtHeight )
            , " Get the height of the skirt to render around the edge of HeightField." )    
        .def( 
            "getVertex"
            , (::osg::Vec3 ( ::osg::HeightField::* )( unsigned int,unsigned int ) const)( &::osg::HeightField::getVertex )
            , ( bp::arg("c"), bp::arg("r") ) )    
        .def( 
            "getXInterval"
            , (float ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getXInterval ) )    
        .def( 
            "getYInterval"
            , (float ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::getYInterval ) )    
        .def( 
            "isSameKindAs"
            , (bool ( ::osg::HeightField::* )( ::osg::Object const * ) const)(&::osg::HeightField::isSameKindAs)
            , (bool ( HeightField_wrapper::* )( ::osg::Object const * ) const)(&HeightField_wrapper::default_isSameKindAs)
            , ( bp::arg("obj") ) )    
        .def( 
            "libraryName"
            , (char const * ( ::osg::HeightField::* )(  ) const)(&::osg::HeightField::libraryName)
            , (char const * ( HeightField_wrapper::* )(  ) const)(&HeightField_wrapper::default_libraryName) )    
        .def( 
            "setBorderWidth"
            , (void ( ::osg::HeightField::* )( unsigned int ) )( &::osg::HeightField::setBorderWidth )
            , ( bp::arg("borderWidth") )
            , " Set the width in number of cells in from the edge that the height field should be rendered from.\n This exists to allow gradient and curvature continutity to be maintained between adjacent HeightField, where\n the border cells will overlap adjacent HeightField." )    
        .def( 
            "setHeight"
            , (void ( ::osg::HeightField::* )( unsigned int,unsigned int,float ) )( &::osg::HeightField::setHeight )
            , ( bp::arg("c"), bp::arg("r"), bp::arg("value") ) )    
        .def( 
            "setOrigin"
            , (void ( ::osg::HeightField::* )( ::osg::Vec3 const & ) )( &::osg::HeightField::setOrigin )
            , ( bp::arg("origin") ) )    
        .def( 
            "setRotation"
            , (void ( ::osg::HeightField::* )( ::osg::Quat const & ) )( &::osg::HeightField::setRotation )
            , ( bp::arg("quat") ) )    
        .def( 
            "setSkirtHeight"
            , (void ( ::osg::HeightField::* )( float ) )( &::osg::HeightField::setSkirtHeight )
            , ( bp::arg("skirtHeight") )
            , " Set the height of the skirt to render around the edge of HeightField.\n The skirt is used as a means of disguising edge boundaries between adjacent HeightField,\n particularly of ones with different resolutions." )    
        .def( 
            "setXInterval"
            , (void ( ::osg::HeightField::* )( float ) )( &::osg::HeightField::setXInterval )
            , ( bp::arg("dx") ) )    
        .def( 
            "setYInterval"
            , (void ( ::osg::HeightField::* )( float ) )( &::osg::HeightField::setYInterval )
            , ( bp::arg("dy") ) )    
        .def( 
            "zeroRotation"
            , (bool ( ::osg::HeightField::* )(  ) const)( &::osg::HeightField::zeroRotation ) );

}
