// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "ScopedLock_less__OpenThreads_scope_Mutex__greater_.pypp.hpp"

namespace bp = boost::python;

void register_ScopedLock_less__OpenThreads_scope_Mutex__greater__class(){

    { //::OpenThreads::ScopedLock< OpenThreads::Mutex >
        typedef bp::class_< OpenThreads::ScopedLock< OpenThreads::Mutex >, boost::noncopyable > ScopedLock_less__OpenThreads_scope_Mutex__greater__exposer_t;
        ScopedLock_less__OpenThreads_scope_Mutex__greater__exposer_t ScopedLock_less__OpenThreads_scope_Mutex__greater__exposer = ScopedLock_less__OpenThreads_scope_Mutex__greater__exposer_t( "ScopedLock_less__OpenThreads_scope_Mutex__greater_", bp::init< OpenThreads::Mutex & >(( bp::arg("m") )) );
        bp::scope ScopedLock_less__OpenThreads_scope_Mutex__greater__scope( ScopedLock_less__OpenThreads_scope_Mutex__greater__exposer );
        bp::implicitly_convertible< OpenThreads::Mutex &, OpenThreads::ScopedLock< OpenThreads::Mutex > >();
    }

}
