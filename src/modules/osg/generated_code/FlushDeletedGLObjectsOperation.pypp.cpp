// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "FlushDeletedGLObjectsOperation.pypp.hpp"

namespace bp = boost::python;

struct FlushDeletedGLObjectsOperation_wrapper : osg::FlushDeletedGLObjectsOperation, bp::wrapper< osg::FlushDeletedGLObjectsOperation > {

    FlushDeletedGLObjectsOperation_wrapper(double availableTime, bool keep=false )
    : osg::FlushDeletedGLObjectsOperation( availableTime, keep )
      , bp::wrapper< osg::FlushDeletedGLObjectsOperation >(){
        // constructor
    
    }

    virtual void operator()( ::osg::GraphicsContext * arg0 ) {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            func___call__( boost::python::ptr(arg0) );
        else{
            this->osg::FlushDeletedGLObjectsOperation::operator()( boost::python::ptr(arg0) );
        }
    }
    
    void default___call__( ::osg::GraphicsContext * arg0 ) {
        osg::FlushDeletedGLObjectsOperation::operator()( boost::python::ptr(arg0) );
    }

    virtual void release(  ) {
        if( bp::override func_release = this->get_override( "release" ) )
            func_release(  );
        else{
            this->osg::Operation::release(  );
        }
    }
    
    void default_release(  ) {
        osg::Operation::release( );
    }

};

void register_FlushDeletedGLObjectsOperation_class(){

    { //::osg::FlushDeletedGLObjectsOperation
        typedef bp::class_< FlushDeletedGLObjectsOperation_wrapper, bp::bases< osg::GraphicsOperation >, osg::ref_ptr< ::osg::FlushDeletedGLObjectsOperation >, boost::noncopyable > FlushDeletedGLObjectsOperation_exposer_t;
        FlushDeletedGLObjectsOperation_exposer_t FlushDeletedGLObjectsOperation_exposer = FlushDeletedGLObjectsOperation_exposer_t( "FlushDeletedGLObjectsOperation", bp::init< double, bp::optional< bool > >(( bp::arg("availableTime"), bp::arg("keep")=(bool)(false) )) );
        bp::scope FlushDeletedGLObjectsOperation_scope( FlushDeletedGLObjectsOperation_exposer );
        bp::implicitly_convertible< double, osg::FlushDeletedGLObjectsOperation >();
        { //::osg::FlushDeletedGLObjectsOperation::operator()
        
            typedef void ( ::osg::FlushDeletedGLObjectsOperation::*__call___function_type )( ::osg::GraphicsContext * ) ;
            typedef void ( FlushDeletedGLObjectsOperation_wrapper::*default___call___function_type )( ::osg::GraphicsContext * ) ;
            
            FlushDeletedGLObjectsOperation_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::FlushDeletedGLObjectsOperation::operator())
                , default___call___function_type(&FlushDeletedGLObjectsOperation_wrapper::default___call__)
                , ( bp::arg("arg0") ) );
        
        }
        FlushDeletedGLObjectsOperation_exposer.def_readwrite( "_availableTime", &osg::FlushDeletedGLObjectsOperation::_availableTime );
        { //::osg::Operation::release
        
            typedef void ( ::osg::Operation::*release_function_type )(  ) ;
            typedef void ( FlushDeletedGLObjectsOperation_wrapper::*default_release_function_type )(  ) ;
            
            FlushDeletedGLObjectsOperation_exposer.def( 
                "release"
                , release_function_type(&::osg::Operation::release)
                , default_release_function_type(&FlushDeletedGLObjectsOperation_wrapper::default_release) );
        
        }
    }

}
