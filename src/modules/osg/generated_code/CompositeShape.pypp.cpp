// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "CompositeShape.pypp.hpp"

namespace bp = boost::python;

struct CompositeShape_wrapper : osg::CompositeShape, bp::wrapper< osg::CompositeShape > {

    CompositeShape_wrapper( )
    : osg::CompositeShape( )
      , bp::wrapper< osg::CompositeShape >(){
        // null constructor
    
    }

    virtual void accept( ::osg::ShapeVisitor & sv ) {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(sv) );
        else{
            this->osg::CompositeShape::accept( boost::ref(sv) );
        }
    }
    
    void default_accept( ::osg::ShapeVisitor & sv ) {
        osg::CompositeShape::accept( boost::ref(sv) );
    }

    virtual void accept( ::osg::ConstShapeVisitor & csv ) const  {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(csv) );
        else{
            this->osg::CompositeShape::accept( boost::ref(csv) );
        }
    }
    
    void default_accept( ::osg::ConstShapeVisitor & csv ) const  {
        osg::CompositeShape::accept( boost::ref(csv) );
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osg::CompositeShape::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osg::CompositeShape::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osg::CompositeShape::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osg::CompositeShape::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osg::CompositeShape::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osg::CompositeShape::cloneType( );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osg::CompositeShape::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osg::CompositeShape::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osg::CompositeShape::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osg::CompositeShape::libraryName( );
    }

};

void register_CompositeShape_class(){

    bp::class_< CompositeShape_wrapper, bp::bases< osg::Shape >, osg::ref_ptr< ::osg::CompositeShape >, boost::noncopyable >( "CompositeShape", bp::no_init )    
        .def( bp::init< >() )    
        .def( 
            "accept"
            , (void ( ::osg::CompositeShape::* )( ::osg::ShapeVisitor & ) )(&::osg::CompositeShape::accept)
            , (void ( CompositeShape_wrapper::* )( ::osg::ShapeVisitor & ) )(&CompositeShape_wrapper::default_accept)
            , ( bp::arg("sv") ) )    
        .def( 
            "accept"
            , (void ( ::osg::CompositeShape::* )( ::osg::ConstShapeVisitor & ) const)(&::osg::CompositeShape::accept)
            , (void ( CompositeShape_wrapper::* )( ::osg::ConstShapeVisitor & ) const)(&CompositeShape_wrapper::default_accept)
            , ( bp::arg("csv") ) )    
        .def( 
            "addChild"
            , (void ( ::osg::CompositeShape::* )( ::osg::Shape * ) )( &::osg::CompositeShape::addChild )
            , ( bp::arg("shape") )
            , " Add a child to the list." )    
        .def( 
            "className"
            , (char const * ( ::osg::CompositeShape::* )(  ) const)(&::osg::CompositeShape::className)
            , (char const * ( CompositeShape_wrapper::* )(  ) const)(&CompositeShape_wrapper::default_className) )    
        .def( 
            "clone"
            , (::osg::Object * ( ::osg::CompositeShape::* )( ::osg::CopyOp const & ) const)(&::osg::CompositeShape::clone)
            , (::osg::Object * ( CompositeShape_wrapper::* )( ::osg::CopyOp const & ) const)(&CompositeShape_wrapper::default_clone)
            , ( bp::arg("copyop") )
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "cloneType"
            , (::osg::Object * ( ::osg::CompositeShape::* )(  ) const)(&::osg::CompositeShape::cloneType)
            , (::osg::Object * ( CompositeShape_wrapper::* )(  ) const)(&CompositeShape_wrapper::default_cloneType)
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "findChildNo"
            , (unsigned int ( ::osg::CompositeShape::* )( ::osg::Shape * ) const)( &::osg::CompositeShape::findChildNo )
            , ( bp::arg("shape") )
            , " find the index number of child, if child is not found then it returns getNumChildren(),\n so should be used in similar style to STLs result!=end()." )    
        .def( 
            "getChild"
            , (::osg::Shape * ( ::osg::CompositeShape::* )( unsigned int ) )( &::osg::CompositeShape::getChild )
            , ( bp::arg("i") )
            , bp::return_internal_reference< >()
            , " Get a child." )    
        .def( 
            "getChild"
            , (::osg::Shape const * ( ::osg::CompositeShape::* )( unsigned int ) const)( &::osg::CompositeShape::getChild )
            , ( bp::arg("i") )
            , bp::return_internal_reference< >()
            , " Get a const child." )    
        .def( 
            "getNumChildren"
            , (unsigned int ( ::osg::CompositeShape::* )(  ) const)( &::osg::CompositeShape::getNumChildren )
            , " Get the number of children of this composite shape." )    
        .def( 
            "getShape"
            , (::osg::Shape * ( ::osg::CompositeShape::* )(  ) )( &::osg::CompositeShape::getShape )
            , bp::return_internal_reference< >()
            , " Get the shape that encloses all of the children." )    
        .def( 
            "getShape"
            , (::osg::Shape const * ( ::osg::CompositeShape::* )(  ) const)( &::osg::CompositeShape::getShape )
            , bp::return_internal_reference< >()
            , " Get the const shape that encloses all of the children." )    
        .def( 
            "isSameKindAs"
            , (bool ( ::osg::CompositeShape::* )( ::osg::Object const * ) const)(&::osg::CompositeShape::isSameKindAs)
            , (bool ( CompositeShape_wrapper::* )( ::osg::Object const * ) const)(&CompositeShape_wrapper::default_isSameKindAs)
            , ( bp::arg("obj") ) )    
        .def( 
            "libraryName"
            , (char const * ( ::osg::CompositeShape::* )(  ) const)(&::osg::CompositeShape::libraryName)
            , (char const * ( CompositeShape_wrapper::* )(  ) const)(&CompositeShape_wrapper::default_libraryName) )    
        .def( 
            "removeChild"
            , (void ( ::osg::CompositeShape::* )( unsigned int ) )( &::osg::CompositeShape::removeChild )
            , ( bp::arg("i") )
            , " remove a child from the list." )    
        .def( 
            "setShape"
            , (void ( ::osg::CompositeShape::* )( ::osg::Shape * ) )( &::osg::CompositeShape::setShape )
            , ( bp::arg("shape") )
            , " Set the shape that encloses all of the children." );

}
