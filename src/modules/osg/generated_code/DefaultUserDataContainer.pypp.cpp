// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "DefaultUserDataContainer.pypp.hpp"

namespace bp = boost::python;

struct DefaultUserDataContainer_wrapper : osg::DefaultUserDataContainer, bp::wrapper< osg::DefaultUserDataContainer > {

    DefaultUserDataContainer_wrapper( )
    : osg::DefaultUserDataContainer( )
      , bp::wrapper< osg::DefaultUserDataContainer >(){
        // null constructor
    
    }

    virtual void addDescription( ::std::string const & desc ) {
        if( bp::override func_addDescription = this->get_override( "addDescription" ) )
            func_addDescription( desc );
        else{
            this->osg::DefaultUserDataContainer::addDescription( desc );
        }
    }
    
    void default_addDescription( ::std::string const & desc ) {
        osg::DefaultUserDataContainer::addDescription( desc );
    }

    virtual unsigned int addUserObject( ::osg::Object * obj ) {
        if( bp::override func_addUserObject = this->get_override( "addUserObject" ) )
            return func_addUserObject( boost::python::ptr(obj) );
        else{
            return this->osg::DefaultUserDataContainer::addUserObject( boost::python::ptr(obj) );
        }
    }
    
    unsigned int default_addUserObject( ::osg::Object * obj ) {
        return osg::DefaultUserDataContainer::addUserObject( boost::python::ptr(obj) );
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osg::DefaultUserDataContainer::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osg::DefaultUserDataContainer::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osg::DefaultUserDataContainer::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osg::DefaultUserDataContainer::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osg::DefaultUserDataContainer::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osg::DefaultUserDataContainer::cloneType( );
    }

    virtual unsigned int getNumDescriptions(  ) const  {
        if( bp::override func_getNumDescriptions = this->get_override( "getNumDescriptions" ) )
            return func_getNumDescriptions(  );
        else{
            return this->osg::DefaultUserDataContainer::getNumDescriptions(  );
        }
    }
    
    unsigned int default_getNumDescriptions(  ) const  {
        return osg::DefaultUserDataContainer::getNumDescriptions( );
    }

    virtual unsigned int getNumUserObjects(  ) const  {
        if( bp::override func_getNumUserObjects = this->get_override( "getNumUserObjects" ) )
            return func_getNumUserObjects(  );
        else{
            return this->osg::DefaultUserDataContainer::getNumUserObjects(  );
        }
    }
    
    unsigned int default_getNumUserObjects(  ) const  {
        return osg::DefaultUserDataContainer::getNumUserObjects( );
    }

    virtual ::osg::Referenced * getUserData(  ) {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::DefaultUserDataContainer::getUserData(  );
        }
    }
    
    ::osg::Referenced * default_getUserData(  ) {
        return osg::DefaultUserDataContainer::getUserData( );
    }

    virtual ::osg::Referenced const * getUserData(  ) const  {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::DefaultUserDataContainer::getUserData(  );
        }
    }
    
    ::osg::Referenced const * default_getUserData(  ) const  {
        return osg::DefaultUserDataContainer::getUserData( );
    }

    virtual unsigned int getUserObjectIndex( ::osg::Object const * obj, unsigned int startPos=0 ) const  {
        if( bp::override func_getUserObjectIndex = this->get_override( "getUserObjectIndex" ) )
            return func_getUserObjectIndex( boost::python::ptr(obj), startPos );
        else{
            return this->osg::DefaultUserDataContainer::getUserObjectIndex( boost::python::ptr(obj), startPos );
        }
    }
    
    unsigned int default_getUserObjectIndex( ::osg::Object const * obj, unsigned int startPos=0 ) const  {
        return osg::DefaultUserDataContainer::getUserObjectIndex( boost::python::ptr(obj), startPos );
    }

    virtual unsigned int getUserObjectIndex( ::std::string const & name, unsigned int startPos=0 ) const  {
        if( bp::override func_getUserObjectIndex = this->get_override( "getUserObjectIndex" ) )
            return func_getUserObjectIndex( name, startPos );
        else{
            return this->osg::DefaultUserDataContainer::getUserObjectIndex( name, startPos );
        }
    }
    
    unsigned int default_getUserObjectIndex( ::std::string const & name, unsigned int startPos=0 ) const  {
        return osg::DefaultUserDataContainer::getUserObjectIndex( name, startPos );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osg::DefaultUserDataContainer::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osg::DefaultUserDataContainer::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osg::DefaultUserDataContainer::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osg::DefaultUserDataContainer::libraryName( );
    }

    virtual void removeUserObject( unsigned int i ) {
        if( bp::override func_removeUserObject = this->get_override( "removeUserObject" ) )
            func_removeUserObject( i );
        else{
            this->osg::DefaultUserDataContainer::removeUserObject( i );
        }
    }
    
    void default_removeUserObject( unsigned int i ) {
        osg::DefaultUserDataContainer::removeUserObject( i );
    }

    virtual void setDescriptions( ::std::vector< std::string > const & descriptions ) {
        if( bp::override func_setDescriptions = this->get_override( "setDescriptions" ) )
            func_setDescriptions( boost::ref(descriptions) );
        else{
            this->osg::DefaultUserDataContainer::setDescriptions( boost::ref(descriptions) );
        }
    }
    
    void default_setDescriptions( ::std::vector< std::string > const & descriptions ) {
        osg::DefaultUserDataContainer::setDescriptions( boost::ref(descriptions) );
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::DefaultUserDataContainer::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::DefaultUserDataContainer::setThreadSafeRefUnref( threadSafe );
    }

    virtual void setUserData( ::osg::Referenced * obj ) {
        if( bp::override func_setUserData = this->get_override( "setUserData" ) )
            func_setUserData( boost::python::ptr(obj) );
        else{
            this->osg::DefaultUserDataContainer::setUserData( boost::python::ptr(obj) );
        }
    }
    
    void default_setUserData( ::osg::Referenced * obj ) {
        osg::DefaultUserDataContainer::setUserData( boost::python::ptr(obj) );
    }

    virtual void setUserObject( unsigned int i, ::osg::Object * obj ) {
        if( bp::override func_setUserObject = this->get_override( "setUserObject" ) )
            func_setUserObject( i, boost::python::ptr(obj) );
        else{
            this->osg::DefaultUserDataContainer::setUserObject( i, boost::python::ptr(obj) );
        }
    }
    
    void default_setUserObject( unsigned int i, ::osg::Object * obj ) {
        osg::DefaultUserDataContainer::setUserObject( i, boost::python::ptr(obj) );
    }

};

void register_DefaultUserDataContainer_class(){

    bp::class_< DefaultUserDataContainer_wrapper, bp::bases< osg::UserDataContainer >, osg::ref_ptr< ::osg::DefaultUserDataContainer >, boost::noncopyable >( "DefaultUserDataContainer", "\n Internal structure for storing all user data.\n", bp::no_init )    
        .def( bp::init< >("\n Internal structure for storing all user data.\n") )    
        .def( 
            "addDescription"
            , (void ( ::osg::DefaultUserDataContainer::* )( ::std::string const & ) )(&::osg::DefaultUserDataContainer::addDescription)
            , (void ( DefaultUserDataContainer_wrapper::* )( ::std::string const & ) )(&DefaultUserDataContainer_wrapper::default_addDescription)
            , ( bp::arg("desc") ) )    
        .def( 
            "addUserObject"
            , (unsigned int ( ::osg::DefaultUserDataContainer::* )( ::osg::Object * ) )(&::osg::DefaultUserDataContainer::addUserObject)
            , (unsigned int ( DefaultUserDataContainer_wrapper::* )( ::osg::Object * ) )(&DefaultUserDataContainer_wrapper::default_addUserObject)
            , ( bp::arg("obj") ) )    
        .def( 
            "className"
            , (char const * ( ::osg::DefaultUserDataContainer::* )(  ) const)(&::osg::DefaultUserDataContainer::className)
            , (char const * ( DefaultUserDataContainer_wrapper::* )(  ) const)(&DefaultUserDataContainer_wrapper::default_className) )    
        .def( 
            "clone"
            , (::osg::Object * ( ::osg::DefaultUserDataContainer::* )( ::osg::CopyOp const & ) const)(&::osg::DefaultUserDataContainer::clone)
            , (::osg::Object * ( DefaultUserDataContainer_wrapper::* )( ::osg::CopyOp const & ) const)(&DefaultUserDataContainer_wrapper::default_clone)
            , ( bp::arg("copyop") )
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "cloneType"
            , (::osg::Object * ( ::osg::DefaultUserDataContainer::* )(  ) const)(&::osg::DefaultUserDataContainer::cloneType)
            , (::osg::Object * ( DefaultUserDataContainer_wrapper::* )(  ) const)(&DefaultUserDataContainer_wrapper::default_cloneType)
            , bp::return_value_policy< bp::reference_existing_object >() )    
        .def( 
            "getNumDescriptions"
            , (unsigned int ( ::osg::DefaultUserDataContainer::* )(  ) const)(&::osg::DefaultUserDataContainer::getNumDescriptions)
            , (unsigned int ( DefaultUserDataContainer_wrapper::* )(  ) const)(&DefaultUserDataContainer_wrapper::default_getNumDescriptions) )    
        .def( 
            "getNumUserObjects"
            , (unsigned int ( ::osg::DefaultUserDataContainer::* )(  ) const)(&::osg::DefaultUserDataContainer::getNumUserObjects)
            , (unsigned int ( DefaultUserDataContainer_wrapper::* )(  ) const)(&DefaultUserDataContainer_wrapper::default_getNumUserObjects) )    
        .def( 
            "getUserData"
            , (::osg::Referenced * ( ::osg::DefaultUserDataContainer::* )(  ) )(&::osg::DefaultUserDataContainer::getUserData)
            , (::osg::Referenced * ( DefaultUserDataContainer_wrapper::* )(  ) )(&DefaultUserDataContainer_wrapper::default_getUserData)
            , bp::return_internal_reference< >() )    
        .def( 
            "getUserData"
            , (::osg::Referenced const * ( ::osg::DefaultUserDataContainer::* )(  ) const)(&::osg::DefaultUserDataContainer::getUserData)
            , (::osg::Referenced const * ( DefaultUserDataContainer_wrapper::* )(  ) const)(&DefaultUserDataContainer_wrapper::default_getUserData)
            , bp::return_internal_reference< >() )    
        .def( 
            "getUserObjectIndex"
            , (unsigned int ( ::osg::DefaultUserDataContainer::* )( ::osg::Object const *,unsigned int ) const)(&::osg::DefaultUserDataContainer::getUserObjectIndex)
            , (unsigned int ( DefaultUserDataContainer_wrapper::* )( ::osg::Object const *,unsigned int ) const)(&DefaultUserDataContainer_wrapper::default_getUserObjectIndex)
            , ( bp::arg("obj"), bp::arg("startPos")=(unsigned int)(0) ) )    
        .def( 
            "getUserObjectIndex"
            , (unsigned int ( ::osg::DefaultUserDataContainer::* )( ::std::string const &,unsigned int ) const)(&::osg::DefaultUserDataContainer::getUserObjectIndex)
            , (unsigned int ( DefaultUserDataContainer_wrapper::* )( ::std::string const &,unsigned int ) const)(&DefaultUserDataContainer_wrapper::default_getUserObjectIndex)
            , ( bp::arg("name"), bp::arg("startPos")=(unsigned int)(0) ) )    
        .def( 
            "isSameKindAs"
            , (bool ( ::osg::DefaultUserDataContainer::* )( ::osg::Object const * ) const)(&::osg::DefaultUserDataContainer::isSameKindAs)
            , (bool ( DefaultUserDataContainer_wrapper::* )( ::osg::Object const * ) const)(&DefaultUserDataContainer_wrapper::default_isSameKindAs)
            , ( bp::arg("obj") ) )    
        .def( 
            "libraryName"
            , (char const * ( ::osg::DefaultUserDataContainer::* )(  ) const)(&::osg::DefaultUserDataContainer::libraryName)
            , (char const * ( DefaultUserDataContainer_wrapper::* )(  ) const)(&DefaultUserDataContainer_wrapper::default_libraryName) )    
        .def( 
            "removeUserObject"
            , (void ( ::osg::DefaultUserDataContainer::* )( unsigned int ) )(&::osg::DefaultUserDataContainer::removeUserObject)
            , (void ( DefaultUserDataContainer_wrapper::* )( unsigned int ) )(&DefaultUserDataContainer_wrapper::default_removeUserObject)
            , ( bp::arg("i") ) )    
        .def( 
            "setDescriptions"
            , (void ( ::osg::DefaultUserDataContainer::* )( ::std::vector< std::string > const & ) )(&::osg::DefaultUserDataContainer::setDescriptions)
            , (void ( DefaultUserDataContainer_wrapper::* )( ::std::vector< std::string > const & ) )(&DefaultUserDataContainer_wrapper::default_setDescriptions)
            , ( bp::arg("descriptions") ) )    
        .def( 
            "setThreadSafeRefUnref"
            , (void ( ::osg::DefaultUserDataContainer::* )( bool ) )(&::osg::DefaultUserDataContainer::setThreadSafeRefUnref)
            , (void ( DefaultUserDataContainer_wrapper::* )( bool ) )(&DefaultUserDataContainer_wrapper::default_setThreadSafeRefUnref)
            , ( bp::arg("threadSafe") ) )    
        .def( 
            "setUserData"
            , (void ( ::osg::DefaultUserDataContainer::* )( ::osg::Referenced * ) )(&::osg::DefaultUserDataContainer::setUserData)
            , (void ( DefaultUserDataContainer_wrapper::* )( ::osg::Referenced * ) )(&DefaultUserDataContainer_wrapper::default_setUserData)
            , ( bp::arg("obj") ) )    
        .def( 
            "setUserObject"
            , (void ( ::osg::DefaultUserDataContainer::* )( unsigned int,::osg::Object * ) )(&::osg::DefaultUserDataContainer::setUserObject)
            , (void ( DefaultUserDataContainer_wrapper::* )( unsigned int,::osg::Object * ) )(&DefaultUserDataContainer_wrapper::default_setUserObject)
            , ( bp::arg("i"), bp::arg("obj") ) );

}
