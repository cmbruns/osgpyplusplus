// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "ValueVisitor.pypp.hpp"

namespace bp = boost::python;

struct ValueVisitor_wrapper : osg::ValueVisitor, bp::wrapper< osg::ValueVisitor > {

    ValueVisitor_wrapper(osg::ValueVisitor const & arg )
    : osg::ValueVisitor( arg )
      , bp::wrapper< osg::ValueVisitor >(){
        // copy constructor
        
    }

    ValueVisitor_wrapper( )
    : osg::ValueVisitor( )
      , bp::wrapper< osg::ValueVisitor >(){
        // null constructor
    
    }

    virtual void apply( ::GLbyte & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLbyte & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::GLshort & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLshort & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::GLint & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLint & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::GLushort & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLushort & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::GLubyte & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLubyte & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::GLuint & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLuint & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::GLfloat & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( ::GLfloat & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( double & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( arg0 );
        else{
            this->osg::ValueVisitor::apply( arg0 );
        }
    }
    
    void default_apply( double & arg0 ) {
        osg::ValueVisitor::apply( arg0 );
    }

    virtual void apply( ::osg::Vec2b & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2b & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3b & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3b & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4b & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4b & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2s & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2s & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3s & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3s & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4s & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4s & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2i & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2i & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3i & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3i & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4i & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4i & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2ub & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2ub & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3ub & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3ub & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4ub & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4ub & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2us & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2us & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3us & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3us & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4us & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4us & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2ui & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2ui & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3ui & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3ui & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4ui & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4ui & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2 & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2 & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3 & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3 & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4 & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4 & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec2d & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec2d & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec3d & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec3d & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Vec4d & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Vec4d & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Matrixf & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Matrixf & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

    virtual void apply( ::osg::Matrixd & arg0 ) {
        if( bp::override func_apply = this->get_override( "apply" ) )
            func_apply( boost::ref(arg0) );
        else{
            this->osg::ValueVisitor::apply( boost::ref(arg0) );
        }
    }
    
    void default_apply( ::osg::Matrixd & arg0 ) {
        osg::ValueVisitor::apply( boost::ref(arg0) );
    }

};

void register_ValueVisitor_class(){

    bp::class_< ValueVisitor_wrapper >( "ValueVisitor", bp::init< >() )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLbyte & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLbyte & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLshort & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLshort & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLint & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLint & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLushort & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLushort & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLubyte & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLubyte & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLuint & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLuint & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::GLfloat & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::GLfloat & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( double & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( double & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2b & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2b & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3b & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3b & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4b & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4b & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2s & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2s & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3s & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3s & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4s & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4s & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2i & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2i & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3i & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3i & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4i & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4i & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2ub & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2ub & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3ub & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3ub & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4ub & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4ub & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2us & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2us & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3us & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3us & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4us & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4us & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2ui & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2ui & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3ui & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3ui & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4ui & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4ui & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2 & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2 & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3 & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3 & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4 & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4 & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec2d & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec2d & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec3d & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec3d & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Vec4d & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Vec4d & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Matrixf & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Matrixf & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) )    
        .def( 
            "apply"
            , (void ( ::osg::ValueVisitor::* )( ::osg::Matrixd & ) )(&::osg::ValueVisitor::apply)
            , (void ( ValueVisitor_wrapper::* )( ::osg::Matrixd & ) )(&ValueVisitor_wrapper::default_apply)
            , ( bp::arg("arg0") ) );

}
