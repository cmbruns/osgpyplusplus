// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "RefBlockCount.pypp.hpp"

namespace bp = boost::python;

void register_RefBlockCount_class(){

    { //::osg::RefBlockCount
        typedef bp::class_< osg::RefBlockCount, bp::bases< osg::Referenced, OpenThreads::BlockCount >, osg::ref_ptr< ::osg::RefBlockCount >, boost::noncopyable > RefBlockCount_exposer_t;
        RefBlockCount_exposer_t RefBlockCount_exposer = RefBlockCount_exposer_t( "RefBlockCount", bp::init< unsigned int >(( bp::arg("blockCount") )) );
        bp::scope RefBlockCount_scope( RefBlockCount_exposer );
        bp::implicitly_convertible< unsigned int, osg::RefBlockCount >();
    }

}
