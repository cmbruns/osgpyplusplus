// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "wrap_referenced.h"
#include "FBOExtensions.pypp.hpp"

namespace bp = boost::python;

void register_FBOExtensions_class(){

    bp::class_< osg::FBOExtensions, bp::bases< osg::Referenced >, osg::ref_ptr< ::osg::FBOExtensions >, boost::noncopyable >( "FBOExtensions", "\n FBOExtensions\n", bp::no_init )    
        .def( 
            "instance"
            , (::osg::FBOExtensions * (*)( unsigned int,bool ))( &::osg::FBOExtensions::instance )
            , ( bp::arg("contextID"), bp::arg("createIfNotInitalized") )
            , bp::return_internal_reference< >() )    
        .def( 
            "isMultisampleCoverageSupported"
            , (bool ( ::osg::FBOExtensions::* )(  ) const)( &::osg::FBOExtensions::isMultisampleCoverageSupported ) )    
        .def( 
            "isMultisampleSupported"
            , (bool ( ::osg::FBOExtensions::* )(  ) const)( &::osg::FBOExtensions::isMultisampleSupported ) )    
        .def( 
            "isPackedDepthStencilSupported"
            , (bool ( ::osg::FBOExtensions::* )(  ) const)( &::osg::FBOExtensions::isPackedDepthStencilSupported ) )    
        .def( 
            "isSupported"
            , (bool ( ::osg::FBOExtensions::* )(  ) const)( &::osg::FBOExtensions::isSupported ) )    
        .staticmethod( "instance" );

}
